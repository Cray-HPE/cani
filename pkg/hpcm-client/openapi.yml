openapi: 3.0.1
info:
  title: HPCM cmdb REST API Documentation
  description: |-
    HPE Performance Cluster Manager 'cmdb' service features a REST API. This section describes its implementation.

    Standard REST API concepts (such as HTTP verbs, return codes, JSON, etc.) are not covered here.
  version: v1
servers:
- url: https://localhost:8080/cmu/v1
paths:
  /admin/db/backup:
    post:
      tags:
      - Administration operations
      summary: Trigger a database backup on disk
      operationId: backup
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /alerts/{identifier}:
    get:
      tags:
      - Alert operations
      summary: Gets one or more alert(s)
      operationId: get
      parameters:
      - name: identifier
        in: path
        description: Alert identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
        "403":
          description: User is not allowed for ALERT_GET
        "404":
          description: No alert found with the given identifier
      security:
      - X-Auth-Token: []
  /alerts:
    get:
      tags:
      - Alert operations
      summary: Lists all alerts
      operationId: getAll
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Alert'
                x-content-type: application/json
        "403":
          description: User is not allowed for ALERT_GET
      security:
      - X-Auth-Token: []
  /alerts/{identifier}/attributes:
    get:
      tags:
      - Alert operations
      summary: Gets all attributes of a single alert
      operationId: getAttributes
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "403":
          description: User is not allowed for ALERT_GET
        "404":
          description: No alert found with the given identifier
      security:
      - X-Auth-Token: []
  /architectures/{identifier}:
    get:
      tags:
      - Architecture operations
      summary: Gets one or more architecture(s)
      operationId: get
      parameters:
      - name: identifier
        in: path
        description: Architecture identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Architecture'
        "403":
          description: User is not allowed for ARCHITECTURES_GET
        "404":
          description: No architecture found with the given identifier
      security:
      - X-Auth-Token: []
  /architectures:
    get:
      tags:
      - Architecture operations
      summary: Lists all architectures
      operationId: getAll
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Architecture'
                x-content-type: application/json
        "403":
          description: User is not allowed for ARCHITECTURES_GET
      security:
      - X-Auth-Token: []
  /architectures/{identifier}/attributes:
    get:
      tags:
      - Architecture operations
      summary: Gets all attributes of a single architecture
      operationId: getAttributes
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "403":
          description: User is not allowed for ARCHITECTURE_GET
        "404":
          description: No architecture found with the given identifier
      security:
      - X-Auth-Token: []
  /controllers:
    get:
      tags:
      - Controller operations
      summary: Lists all groups
      operationId: getAll
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Group'
                x-content-type: application/json
        "403":
          description: User is not allowed for ???_GROUP_GET
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Controller operations
      summary: Updates a set of existing controllers
      operationId: putAll
      parameters:
      - name: nameAsId
        in: query
        description: Use name instead of UUID as identifier
        schema:
          type: boolean
          default: false
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Updated controllers definition
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Controller'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Controller'
                x-content-type: application/json
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for CONTROLLER_MODIFY
        "404":
          description: At least one supplied controller is not found
      security:
      - X-Auth-Token: []
    post:
      tags:
      - Controller operations
      summary: Creates one or multiple new controllers
      operationId: addAll
      requestBody:
        description: Controller(s) definition
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Controller'
        required: true
      responses:
        "201":
          description: Controller(s) successfully added
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for CONTROLLER_ADD
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Controller operations
      summary: Deletes a set of existing controllers
      operationId: deleteAll
      parameters:
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Controllers identifier
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleIdentifierDto'
      responses:
        "403":
          description: User is not allowed for CONTROLLER_DELETE
        "404":
          description: At least one supplied controller is not found
      security:
      - X-Auth-Token: []
  /controllers/{identifier}/nodes:
    get:
      tags:
      - Controller operations
      summary: Gets all nodes of an existing group
      operationId: getNodes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Node'
                x-content-type: application/json
        "403":
          description: User is not allowed for ???_GROUP_GET
        "404":
          description: No group with the given identifier
      security:
      - X-Auth-Token: []
    post:
      tags:
      - Controller operations
      summary: Adds nodes to an existing group
      operationId: addNodes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      requestBody:
        description: Nodes identifier
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleIdentifierDto'
        required: true
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
        "404":
          description: No group with the given identifier; at least one node not found
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Controller operations
      summary: Removes some or all nodes from an existing group
      operationId: removeNodes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      requestBody:
        description: "Nodes identifier, or empty to remove all nodes"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleIdentifierDto'
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
        "404":
          description: No group with the given identifier; at least one node not found
            in given group
      security:
      - X-Auth-Token: []
  /controllers/{identifier}:
    get:
      tags:
      - Controller operations
      summary: Gets one or more group(s)
      operationId: get
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        "403":
          description: User is not allowed for ???_GROUP_GET
        "404":
          description: No group with the given identifier
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Controller operations
      summary: Updates an existing controller
      operationId: put
      parameters:
      - name: identifier
        in: path
        description: Controller identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Updated controller definition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Controller'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Controller'
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for CONTROLLER_MODIFY
        "404":
          description: No controller found with the given identifier
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Controller operations
      summary: Deletes an existing controller
      operationId: delete
      parameters:
      - name: identifier
        in: path
        description: Controller identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        "403":
          description: User is not allowed for CONTROLLER_DELETE
        "404":
          description: No controller found with the given identifier
      security:
      - X-Auth-Token: []
  /controllers/attributes/{label}:
    get:
      tags:
      - Controller operations
      summary: Gets a global attribute defined for groups
      operationId: getAttribute
      parameters:
      - name: label
        in: path
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "403":
          description: User is not allowed for ???_GROUP_GET
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Controller operations
      summary: Deletes a global attribute defined for groups
      operationId: deleteGlobalAttribute
      parameters:
      - name: label
        in: path
        required: true
        schema:
          type: string
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
      security:
      - X-Auth-Token: []
  /controllers/{identifier}/attributes:
    get:
      tags:
      - Controller operations
      summary: Gets all attributes of a single group
      operationId: getAttributes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "403":
          description: User is not allowed for ???_GROUP_GET
        "404":
          description: No group with the given identifier
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Controller operations
      summary: Adds or modifies attributes of an existing group
      operationId: putAttributes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      requestBody:
        description: Attributes to be added/modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributesDto'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
        "404":
          description: No group with the given identifier
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Controller operations
      summary: Removes all attributes of an existing group
      operationId: deleteAttributes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
        "404":
          description: No group with the given identifier
      security:
      - X-Auth-Token: []
  /controllers/attributes:
    get:
      tags:
      - Controller operations
      summary: Gets all global attributes defined for groups
      operationId: getGlobalAttributes
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "403":
          description: User is not allowed for ???_GROUP_GET
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Controller operations
      summary: Adds or modifies global attributes for groups
      operationId: putGlobalAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributesDto'
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
      security:
      - X-Auth-Token: []
  /controllers/{identifier}/actions:
    get:
      tags:
      - Controller operations
      summary: Gets list of available actions on an existing group
      operationId: getAvailableAction
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        "403":
          description: User is not allowed for GROUP_ACTIONS
        "404":
          description: No group found with the given identifier
      security:
      - X-Auth-Token: []
  /controllers/{identifier}/nodes/{node_id}:
    get:
      tags:
      - Controller operations
      summary: Gets one node of an existing group
      operationId: getNode
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      - name: node_id
        in: path
        description: Node identifier
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
        "403":
          description: User is not allowed for ???_GROUP_GET
        "404":
          description: No group with the given identifier; given node not found in
            given group
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Controller operations
      summary: Removes one node from an existing group
      operationId: removeNode
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      - name: node_id
        in: path
        description: Node identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
        "404":
          description: No group with the given identifier; given node not found in
            given group
      security:
      - X-Auth-Token: []
  /controllers/{identifier}/actions/{action}:
    post:
      tags:
      - Controller operations
      summary: Runs an action on a set of existing groups
      operationId: runAction
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: action
        in: path
        description: Action
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "403":
          description: User is not allowed for GROUP_ACTIONS
        "404":
          description: No node found with the given identifier
      security:
      - X-Auth-Token: []
  /customgroups:
    get:
      tags:
      - Custom Group operations
      summary: Lists all groups
      operationId: getAll
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Group'
                x-content-type: application/json
        "403":
          description: User is not allowed for ???_GROUP_GET
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Custom Group operations
      operationId: putAll
      parameters:
      - name: nameAsId
        in: query
        description: Use name instead of UUID as identifier
        schema:
          type: boolean
          default: false
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Updated custom groups definition
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomGroup'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/CustomGroup'
                x-content-type: application/json
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for CUSTOM_GROUP_MODIFY
        "404":
          description: At least one supplied custom group is not found
      security:
      - X-Auth-Token: []
    post:
      tags:
      - Custom Group operations
      summary: Creates one or multiple new custom group(s)
      operationId: addAll
      parameters:
      - name: ignoreUnknownResources
        in: query
        description: Do not fail on unknown node(s)
        schema:
          type: boolean
      requestBody:
        description: Custom group(s) definition
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomGroup'
        required: true
      responses:
        "201":
          description: Custom group(s) successfully added
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for CUSTOM_GROUP_ADD
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Custom Group operations
      summary: Deletes or archive a set of existing custom groups
      operationId: deleteAll
      parameters:
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Custom groups identifier
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleIdentifierDto'
        required: true
      responses:
        "403":
          description: User is not allowed for CUSTOM_GROUP_DELETE
        "404":
          description: At least one supplied custom groups is not found
      security:
      - X-Auth-Token: []
  /customgroups/{identifier}/nodes:
    get:
      tags:
      - Custom Group operations
      summary: Gets all nodes of an existing group
      operationId: getNodes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Node'
                x-content-type: application/json
        "403":
          description: User is not allowed for ???_GROUP_GET
        "404":
          description: No group with the given identifier
      security:
      - X-Auth-Token: []
    post:
      tags:
      - Custom Group operations
      summary: Adds nodes to an existing group
      operationId: addNodes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      requestBody:
        description: Nodes identifier
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleIdentifierDto'
        required: true
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
        "404":
          description: No group with the given identifier; at least one node not found
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Custom Group operations
      summary: Removes some or all nodes from an existing group
      operationId: removeNodes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      requestBody:
        description: "Nodes identifier, or empty to remove all nodes"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleIdentifierDto'
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
        "404":
          description: No group with the given identifier; at least one node not found
            in given group
      security:
      - X-Auth-Token: []
  /customgroups/{identifier}:
    get:
      tags:
      - Custom Group operations
      summary: Gets one or more group(s)
      operationId: get
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        "403":
          description: User is not allowed for ???_GROUP_GET
        "404":
          description: No group with the given identifier
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Custom Group operations
      operationId: put
      parameters:
      - name: identifier
        in: path
        description: Custom group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Updated custom group definition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomGroup'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomGroup'
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for CUSTOM_GROUP_MODIFY
        "404":
          description: No custom group found with the given identifier
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Custom Group operations
      summary: Deletes or archive an existing custom group
      operationId: delete
      parameters:
      - name: identifier
        in: path
        description: Custom group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        "403":
          description: User is not allowed for CUSTOM_GROUP_DELETE
        "404":
          description: No custom group found with the given identifier
      security:
      - X-Auth-Token: []
  /customgroups/attributes/{label}:
    get:
      tags:
      - Custom Group operations
      summary: Gets a global attribute defined for groups
      operationId: getAttribute
      parameters:
      - name: label
        in: path
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "403":
          description: User is not allowed for ???_GROUP_GET
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Custom Group operations
      summary: Deletes a global attribute defined for groups
      operationId: deleteGlobalAttribute
      parameters:
      - name: label
        in: path
        required: true
        schema:
          type: string
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
      security:
      - X-Auth-Token: []
  /customgroups/{identifier}/attributes:
    get:
      tags:
      - Custom Group operations
      summary: Gets all attributes of a single group
      operationId: getAttributes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "403":
          description: User is not allowed for ???_GROUP_GET
        "404":
          description: No group with the given identifier
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Custom Group operations
      summary: Adds or modifies attributes of an existing group
      operationId: putAttributes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      requestBody:
        description: Attributes to be added/modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributesDto'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
        "404":
          description: No group with the given identifier
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Custom Group operations
      summary: Removes all attributes of an existing group
      operationId: deleteAttributes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
        "404":
          description: No group with the given identifier
      security:
      - X-Auth-Token: []
  /customgroups/attributes:
    get:
      tags:
      - Custom Group operations
      summary: Gets all global attributes defined for groups
      operationId: getGlobalAttributes
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "403":
          description: User is not allowed for ???_GROUP_GET
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Custom Group operations
      summary: Adds or modifies global attributes for groups
      operationId: putGlobalAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributesDto'
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
      security:
      - X-Auth-Token: []
  /customgroups/{identifier}/actions:
    get:
      tags:
      - Custom Group operations
      summary: Gets list of available actions on an existing group
      operationId: getAvailableAction
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        "403":
          description: User is not allowed for GROUP_ACTIONS
        "404":
          description: No group found with the given identifier
      security:
      - X-Auth-Token: []
  /customgroups/{identifier}/nodes/{node_id}:
    get:
      tags:
      - Custom Group operations
      summary: Gets one node of an existing group
      operationId: getNode
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      - name: node_id
        in: path
        description: Node identifier
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
        "403":
          description: User is not allowed for ???_GROUP_GET
        "404":
          description: No group with the given identifier; given node not found in
            given group
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Custom Group operations
      summary: Removes one node from an existing group
      operationId: removeNode
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      - name: node_id
        in: path
        description: Node identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
        "404":
          description: No group with the given identifier; given node not found in
            given group
      security:
      - X-Auth-Token: []
  /customgroups/{identifier}/actions/{action}:
    post:
      tags:
      - Custom Group operations
      summary: Runs an action on a set of existing groups
      operationId: runAction
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: action
        in: path
        description: Action
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "403":
          description: User is not allowed for GROUP_ACTIONS
        "404":
          description: No node found with the given identifier
      security:
      - X-Auth-Token: []
  /eventhooks:
    get:
      tags:
      - Event hook operations
      summary: Lists all event hooks
      operationId: getAll
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/EventHook'
                x-content-type: application/json
        "403":
          description: User is not allowed for EVENT_HOOK_GET
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Event hook operations
      summary: Updates a set of existing event hooks
      operationId: putAll
      parameters:
      - name: nameAsId
        in: query
        description: Use name instead of UUID as identifier
        schema:
          type: boolean
          default: false
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Updated event hooks definition
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EventHook'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/EventHook'
                x-content-type: application/json
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for EVENT_HOOK_MODIFY
        "404":
          description: At least one supplied event hook is not found
      security:
      - X-Auth-Token: []
    post:
      tags:
      - Event hook operations
      summary: Creates one or multiple new event hooks
      operationId: addAll
      requestBody:
        description: Event hook(s) definition
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EventHook'
        required: true
      responses:
        "201":
          description: Event hook(s) successfully added
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for EVENT_HOOK_ADD
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Event hook operations
      summary: Deletes a set of existing event hooks
      operationId: deleteAll
      parameters:
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Event hooks identifier
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleIdentifierDto'
      responses:
        "403":
          description: User is not allowed for EVENT_HOOK_DELETE
        "404":
          description: At least one supplied event hook is not found
      security:
      - X-Auth-Token: []
  /eventhooks/{identifier}:
    get:
      tags:
      - Event hook operations
      summary: Gets one or more event hook(s)
      operationId: get
      parameters:
      - name: identifier
        in: path
        description: Event hook identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
        "403":
          description: User is not allowed for EVENT_HOOK_GET
        "404":
          description: No event hook found with the given identifier
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Event hook operations
      summary: Updates an existing event hook
      operationId: put
      parameters:
      - name: identifier
        in: path
        description: Event hook identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Updated event hook definition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventHook'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for EVENT_HOOK_MODIFY
        "404":
          description: No event hook found with the given identifier
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Event hook operations
      summary: Deletes an existing event hook
      operationId: delete
      parameters:
      - name: identifier
        in: path
        description: Event hook identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        "403":
          description: User is not allowed for EVENT_HOOK_DELETE
        "404":
          description: No event hook found with the given identifier
      security:
      - X-Auth-Token: []
  /eventhooks/attributes/{label}:
    get:
      tags:
      - Event hook operations
      summary: Gets a global attribute defined for event hooks
      operationId: getGlobalAttribute
      parameters:
      - name: label
        in: path
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "403":
          description: User is not allowed for EVENT_HOOK_GET
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Event hook operations
      summary: Deletes a global attribute defined for event hooks
      operationId: deleteGlobalAttribute
      parameters:
      - name: label
        in: path
        required: true
        schema:
          type: string
      responses:
        "403":
          description: User is not allowed for EVENT_HOOK_MODIFY
      security:
      - X-Auth-Token: []
  /eventhooks/{identifier}/attributes:
    get:
      tags:
      - Event hook operations
      summary: Gets all attributes of a single event hook
      operationId: getAttributes
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "403":
          description: User is not allowed for EVENT_HOOK_GET
        "404":
          description: No event hook found with the given identifier
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Event hook operations
      summary: Adds or modifies attributes of an existing event hook
      operationId: putAttributes
      parameters:
      - name: identifier
        in: path
        description: Event hook identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      requestBody:
        description: Attributes to be added/modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributesDto'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for EVENT_HOOK_MODIFY
        "404":
          description: No event hook found with the given identifier
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Event hook operations
      summary: Remove all attributes of an existing event hook
      operationId: deleteAttributes
      parameters:
      - name: identifier
        in: path
        description: Event hook identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        "403":
          description: User is not allowed for EVENT_HOOK_MODIFY
        "404":
          description: No event hook found with the given identifier
      security:
      - X-Auth-Token: []
  /eventhooks/attributes:
    get:
      tags:
      - Event hook operations
      summary: Gets all global attributes defined for event hooks
      operationId: getGlobalAttributes
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "403":
          description: User is not allowed for EVENT_HOOK_GET
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Event hook operations
      summary: Adds or modifies global attributes for event hooks
      operationId: putGlobalAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributesDto'
      responses:
        "403":
          description: User is not allowed for EVENT_HOOK_MODIFY
      security:
      - X-Auth-Token: []
  /events:
    get:
      tags:
      - Events operations
      operationId: getAll
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Event'
                x-content-type: application/json
      security:
      - X-Auth-Token: []
  /events/summary:
    get:
      tags:
      - Events operations
      operationId: summary
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/Event'
                x-content-type: application/json
      security:
      - X-Auth-Token: []
  /:
    get:
      tags:
      - Application
      summary: Lists application entry points
      operationId: get
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDescriptionDTO'
      security:
      - X-Auth-Token: []
  /settings:
    get:
      tags:
      - Application
      summary: Lists application current settings
      operationId: getSettings
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/PropertieDTO'
                x-content-type: application/json
      security:
      - X-Auth-Token: []
  /imagegroups:
    get:
      tags:
      - Image Group operations
      summary: Lists all groups
      operationId: getAll
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Group'
                x-content-type: application/json
        "403":
          description: User is not allowed for ???_GROUP_GET
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Image Group operations
      operationId: putAll
      parameters:
      - name: nameAsId
        in: query
        description: Use name instead of UUID as identifier
        schema:
          type: boolean
          default: false
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Updated image groups definition
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ImageGroup'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/ImageGroup'
                x-content-type: application/json
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for IMAGE_GROUP_MODIFY
        "404":
          description: At least one supplied image group is not found
      security:
      - X-Auth-Token: []
    post:
      tags:
      - Image Group operations
      summary: Creates one or multiple new image group(s)
      operationId: addAll
      requestBody:
        description: Image group(s) definition
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ImageGroup'
        required: true
      responses:
        "201":
          description: Image group(s) successfully added
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for IMAGE_GROUP_ADD
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Image Group operations
      summary: Deletes a set of existing image groups
      operationId: deleteAll
      parameters:
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Image groups identifier
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleIdentifierDto'
      responses:
        "403":
          description: User is not allowed for IMAGE_GROUP_DELETE
        "404":
          description: At least one supplied image groups is not found
      security:
      - X-Auth-Token: []
  /imagegroups/{identifier}/nodes:
    get:
      tags:
      - Image Group operations
      summary: Gets all nodes of an existing group
      operationId: getNodes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Node'
                x-content-type: application/json
        "403":
          description: User is not allowed for ???_GROUP_GET
        "404":
          description: No group with the given identifier
      security:
      - X-Auth-Token: []
    post:
      tags:
      - Image Group operations
      summary: Adds nodes to an existing group
      operationId: addNodes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      requestBody:
        description: Nodes identifier
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleIdentifierDto'
        required: true
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
        "404":
          description: No group with the given identifier; at least one node not found
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Image Group operations
      summary: Removes some or all nodes from an existing group
      operationId: removeNodes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      requestBody:
        description: "Nodes identifier, or empty to remove all nodes"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleIdentifierDto'
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
        "404":
          description: No group with the given identifier; at least one node not found
            in given group
      security:
      - X-Auth-Token: []
  /imagegroups/{identifier}:
    get:
      tags:
      - Image Group operations
      summary: Gets one or more group(s)
      operationId: get
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        "403":
          description: User is not allowed for ???_GROUP_GET
        "404":
          description: No group with the given identifier
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Image Group operations
      operationId: put
      parameters:
      - name: identifier
        in: path
        description: Image group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Updated image group definition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageGroup'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageGroup'
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for IMAGE_GROUP_MODIFY
        "404":
          description: No image group found with the given identifier
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Image Group operations
      summary: Deletes an existing image group
      operationId: delete
      parameters:
      - name: identifier
        in: path
        description: Image group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        "403":
          description: User is not allowed for IMAGE_GROUP_DELETE
        "404":
          description: No image group found with the given identifier
      security:
      - X-Auth-Token: []
  /imagegroups/attributes/{label}:
    get:
      tags:
      - Image Group operations
      summary: Gets a global attribute defined for groups
      operationId: getAttribute
      parameters:
      - name: label
        in: path
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "403":
          description: User is not allowed for ???_GROUP_GET
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Image Group operations
      summary: Deletes a global attribute defined for groups
      operationId: deleteGlobalAttribute
      parameters:
      - name: label
        in: path
        required: true
        schema:
          type: string
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
      security:
      - X-Auth-Token: []
  /imagegroups/{identifier}/attributes:
    get:
      tags:
      - Image Group operations
      summary: Gets all attributes of a single group
      operationId: getAttributes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "403":
          description: User is not allowed for ???_GROUP_GET
        "404":
          description: No group with the given identifier
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Image Group operations
      summary: Adds or modifies attributes of an existing group
      operationId: putAttributes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      requestBody:
        description: Attributes to be added/modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributesDto'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
        "404":
          description: No group with the given identifier
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Image Group operations
      summary: Removes all attributes of an existing group
      operationId: deleteAttributes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
        "404":
          description: No group with the given identifier
      security:
      - X-Auth-Token: []
  /imagegroups/attributes:
    get:
      tags:
      - Image Group operations
      summary: Gets all global attributes defined for groups
      operationId: getGlobalAttributes
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "403":
          description: User is not allowed for ???_GROUP_GET
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Image Group operations
      summary: Adds or modifies global attributes for groups
      operationId: putGlobalAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributesDto'
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
      security:
      - X-Auth-Token: []
  /imagegroups/{identifier}/actions:
    get:
      tags:
      - Image Group operations
      summary: Gets list of available actions on an existing group
      operationId: getAvailableAction
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        "403":
          description: User is not allowed for GROUP_ACTIONS
        "404":
          description: No group found with the given identifier
      security:
      - X-Auth-Token: []
  /imagegroups/{identifier}/nodes/{node_id}:
    get:
      tags:
      - Image Group operations
      summary: Gets one node of an existing group
      operationId: getNode
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      - name: node_id
        in: path
        description: Node identifier
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
        "403":
          description: User is not allowed for ???_GROUP_GET
        "404":
          description: No group with the given identifier; given node not found in
            given group
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Image Group operations
      summary: Removes one node from an existing group
      operationId: removeNode
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      - name: node_id
        in: path
        description: Node identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
        "404":
          description: No group with the given identifier; given node not found in
            given group
      security:
      - X-Auth-Token: []
  /imagegroups/{identifier}/actions/{action}:
    post:
      tags:
      - Image Group operations
      summary: Runs an action on a set of existing groups
      operationId: runAction
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: action
        in: path
        description: Action
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "403":
          description: User is not allowed for GROUP_ACTIONS
        "404":
          description: No node found with the given identifier
      security:
      - X-Auth-Token: []
  /managementcards/{identifier}:
    get:
      tags:
      - Management card operations
      summary: Gets one or more management card(s)
      operationId: get
      parameters:
      - name: identifier
        in: path
        description: Management card identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementCard'
        "403":
          description: User is not allowed for MANAGEMENT_CARD_GET
        "404":
          description: No management card found with the given identifier
      security:
      - X-Auth-Token: []
  /managementcards:
    get:
      tags:
      - Management card operations
      summary: Lists all management cards
      operationId: getAll
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/ManagementCard'
                x-content-type: application/json
        "403":
          description: User is not allowed for MANAGEMENT_CARD_GET
      security:
      - X-Auth-Token: []
  /managementcards/{identifier}/attributes:
    get:
      tags:
      - Management card operations
      summary: Gets all attributes of a single management card
      operationId: getAttributes
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "403":
          description: User is not allowed for MANAGEMENT_CARD_GET
        "404":
          description: No management card found with the given identifier
      security:
      - X-Auth-Token: []
  /metrics/{identifier}:
    get:
      tags:
      - Metric operations
      summary: Gets one or more metric(s)
      operationId: get
      parameters:
      - name: identifier
        in: path
        description: Metric identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metric'
        "403":
          description: User is not allowed for METRIC_GET
        "404":
          description: No metric found with the given identifier
      security:
      - X-Auth-Token: []
  /metrics:
    get:
      tags:
      - Metric operations
      summary: Lists all metrics
      operationId: getAll
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Metric'
                x-content-type: application/json
        "403":
          description: User is not allowed for METRIC_GET
      security:
      - X-Auth-Token: []
  /metrics/{identifier}/attributes:
    get:
      tags:
      - Metric operations
      summary: Gets all attributes of a single metric
      operationId: getAttributes
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "403":
          description: User is not allowed for METRIC_GET
        "404":
          description: No metric found with the given identifier
      security:
      - X-Auth-Token: []
  /networkgroups:
    get:
      tags:
      - Network Group operations
      summary: Lists all groups
      operationId: getAll
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Group'
                x-content-type: application/json
        "403":
          description: User is not allowed for ???_GROUP_GET
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Network Group operations
      operationId: putAll
      parameters:
      - name: nameAsId
        in: query
        description: Use name instead of UUID as identifier
        schema:
          type: boolean
          default: false
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Updated network groups definition
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NetworkGroup'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/NetworkGroup'
                x-content-type: application/json
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for NETWORK_GROUP_MODIFY
        "404":
          description: At least one supplied network group is not found
      security:
      - X-Auth-Token: []
    post:
      tags:
      - Network Group operations
      summary: Creates one or multiple new network group(s)
      operationId: addAll
      requestBody:
        description: Network group(s) definition
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NetworkGroup'
        required: true
      responses:
        "201":
          description: Network group(s) successfully added
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for NETWORK_GROUP_ADD
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Network Group operations
      summary: Deletes a set of existing network groups
      operationId: deleteAll
      parameters:
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Network groups identifier
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleIdentifierDto'
      responses:
        "403":
          description: User is not allowed for NETWORK_GROUP_DELETE
        "404":
          description: At least one supplied network groups is not found
      security:
      - X-Auth-Token: []
  /networkgroups/{identifier}/nodes:
    get:
      tags:
      - Network Group operations
      summary: Gets all nodes of an existing group
      operationId: getNodes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Node'
                x-content-type: application/json
        "403":
          description: User is not allowed for ???_GROUP_GET
        "404":
          description: No group with the given identifier
      security:
      - X-Auth-Token: []
    post:
      tags:
      - Network Group operations
      summary: Adds nodes to an existing group
      operationId: addNodes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      requestBody:
        description: Nodes identifier
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleIdentifierDto'
        required: true
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
        "404":
          description: No group with the given identifier; at least one node not found
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Network Group operations
      summary: Removes some or all nodes from an existing group
      operationId: removeNodes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      requestBody:
        description: "Nodes identifier, or empty to remove all nodes"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleIdentifierDto'
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
        "404":
          description: No group with the given identifier; at least one node not found
            in given group
      security:
      - X-Auth-Token: []
  /networkgroups/{identifier}:
    get:
      tags:
      - Network Group operations
      summary: Gets one or more group(s)
      operationId: get
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        "403":
          description: User is not allowed for ???_GROUP_GET
        "404":
          description: No group with the given identifier
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Network Group operations
      operationId: put
      parameters:
      - name: identifier
        in: path
        description: Network group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Updated network group definition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkGroup'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkGroup'
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for NETWORK_GROUP_MODIFY
        "404":
          description: No network group found with the given identifier
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Network Group operations
      summary: Deletes an existing network group
      operationId: delete
      parameters:
      - name: identifier
        in: path
        description: Network group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        "403":
          description: User is not allowed for NETWORK_GROUP_DELETE
        "404":
          description: No network group found with the given identifier
      security:
      - X-Auth-Token: []
  /networkgroups/attributes/{label}:
    get:
      tags:
      - Network Group operations
      summary: Gets a global attribute defined for groups
      operationId: getAttribute
      parameters:
      - name: label
        in: path
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "403":
          description: User is not allowed for ???_GROUP_GET
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Network Group operations
      summary: Deletes a global attribute defined for groups
      operationId: deleteGlobalAttribute
      parameters:
      - name: label
        in: path
        required: true
        schema:
          type: string
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
      security:
      - X-Auth-Token: []
  /networkgroups/{identifier}/attributes:
    get:
      tags:
      - Network Group operations
      summary: Gets all attributes of a single group
      operationId: getAttributes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "403":
          description: User is not allowed for ???_GROUP_GET
        "404":
          description: No group with the given identifier
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Network Group operations
      summary: Adds or modifies attributes of an existing group
      operationId: putAttributes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      requestBody:
        description: Attributes to be added/modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributesDto'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
        "404":
          description: No group with the given identifier
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Network Group operations
      summary: Removes all attributes of an existing group
      operationId: deleteAttributes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
        "404":
          description: No group with the given identifier
      security:
      - X-Auth-Token: []
  /networkgroups/attributes:
    get:
      tags:
      - Network Group operations
      summary: Gets all global attributes defined for groups
      operationId: getGlobalAttributes
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "403":
          description: User is not allowed for ???_GROUP_GET
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Network Group operations
      summary: Adds or modifies global attributes for groups
      operationId: putGlobalAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributesDto'
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
      security:
      - X-Auth-Token: []
  /networkgroups/{identifier}/actions:
    get:
      tags:
      - Network Group operations
      summary: Gets list of available actions on an existing group
      operationId: getAvailableAction
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        "403":
          description: User is not allowed for GROUP_ACTIONS
        "404":
          description: No group found with the given identifier
      security:
      - X-Auth-Token: []
  /networkgroups/{identifier}/nodes/{node_id}:
    get:
      tags:
      - Network Group operations
      summary: Gets one node of an existing group
      operationId: getNode
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      - name: node_id
        in: path
        description: Node identifier
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
        "403":
          description: User is not allowed for ???_GROUP_GET
        "404":
          description: No group with the given identifier; given node not found in
            given group
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Network Group operations
      summary: Removes one node from an existing group
      operationId: removeNode
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      - name: node_id
        in: path
        description: Node identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
        "404":
          description: No group with the given identifier; given node not found in
            given group
      security:
      - X-Auth-Token: []
  /networkgroups/{identifier}/actions/{action}:
    post:
      tags:
      - Network Group operations
      summary: Runs an action on a set of existing groups
      operationId: runAction
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: action
        in: path
        description: Action
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "403":
          description: User is not allowed for GROUP_ACTIONS
        "404":
          description: No node found with the given identifier
      security:
      - X-Auth-Token: []
  /networks:
    get:
      tags:
      - Network operations
      summary: Lists all networks
      operationId: getAll
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Network'
                x-content-type: application/json
        "403":
          description: User is not allowed for NETWORK_GET
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Network operations
      summary: Updates a set of existing networks
      operationId: putAll
      parameters:
      - name: nameAsId
        in: query
        description: Use name instead of UUID as identifier
        schema:
          type: boolean
          default: false
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Updated networks definition
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Network'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Network'
                x-content-type: application/json
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for NETWORK_MODIFY
        "404":
          description: At least one supplied network is not found
      security:
      - X-Auth-Token: []
    post:
      tags:
      - Network operations
      summary: Creates one or multiple new networks
      operationId: addAll
      requestBody:
        description: Network(s) definition
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Network'
        required: true
      responses:
        "201":
          description: Network(s) successfully added
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for NETWORK_ADD
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Network operations
      summary: Deletes a set of existing networks
      operationId: deleteAll
      parameters:
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Networks identifier
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleIdentifierDto'
      responses:
        "403":
          description: User is not allowed for NETWORK_DELETE
        "404":
          description: At least one supplied network is not found
      security:
      - X-Auth-Token: []
  /networks/{identifier}:
    get:
      tags:
      - Network operations
      summary: Gets one or more network(s)
      operationId: get
      parameters:
      - name: identifier
        in: path
        description: Network identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
        "403":
          description: User is not allowed for NETWORK_GET
        "404":
          description: No network found with the given identifier
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Network operations
      summary: Updates an existing network
      operationId: put
      parameters:
      - name: identifier
        in: path
        description: Network identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Updated network definition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for NETWORK_MODIFY
        "404":
          description: No network found with the given identifier
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Network operations
      summary: Deletes an existing network
      operationId: delete
      parameters:
      - name: identifier
        in: path
        description: Network identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        "403":
          description: User is not allowed for NETWORK_DELETE
        "404":
          description: No network found with the given identifier
      security:
      - X-Auth-Token: []
  /networks/attributes/{label}:
    get:
      tags:
      - Network operations
      summary: Gets a global attribute defined for networks
      operationId: getGlobalAttribute
      parameters:
      - name: label
        in: path
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "403":
          description: User is not allowed for NETWORK_GET
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Network operations
      summary: Deletes a global attribute defined for networks
      operationId: deleteGlobalAttribute
      parameters:
      - name: label
        in: path
        required: true
        schema:
          type: string
      responses:
        "403":
          description: User is not allowed for NETWORK_MODIFY
      security:
      - X-Auth-Token: []
  /networks/{identifier}/attributes:
    get:
      tags:
      - Network operations
      summary: Gets all attributes of a single network
      operationId: getAttributes
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "403":
          description: User is not allowed for NETWORK_GET
        "404":
          description: No network found with the given identifier
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Network operations
      summary: Adds or modifies attributes of an existing network
      operationId: putAttributes
      parameters:
      - name: identifier
        in: path
        description: Network identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      requestBody:
        description: Attributes to be added/modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributesDto'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for NETWORK_MODIFY
        "404":
          description: No network found with the given identifier
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Network operations
      summary: Removes all attributes of an existing network
      operationId: deleteAttributes
      parameters:
      - name: identifier
        in: path
        description: Network identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        "403":
          description: User is not allowed for NETWORK_MODIFY
        "404":
          description: No network found with the given identifier
      security:
      - X-Auth-Token: []
  /networks/attributes:
    get:
      tags:
      - Network operations
      summary: Gets all global attributes defined for networks
      operationId: getGlobalAttributes
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "403":
          description: User is not allowed for NETWORK_GET
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Network operations
      summary: Adds or modifies global attributes for networks
      operationId: putGlobalAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributesDto'
      responses:
        "403":
          description: User is not allowed for NETWORK_MODIFY
      security:
      - X-Auth-Token: []
  /networks/{networkId}/nics/{nicId}:
    get:
      tags:
      - Network operations
      summary: Gets one nic of a single network
      operationId: getNic
      parameters:
      - name: networkId
        in: path
        required: true
        schema:
          type: string
          example: resource42
      - name: nicId
        in: path
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nic'
        "403":
          description: User is not allowed for NETWORK_GET
        "404":
          description: No network found with the given identifier
      security:
      - X-Auth-Token: []
  /networks/{identifier}/nics:
    get:
      tags:
      - Network operations
      summary: Gets all nics of a single network
      operationId: getNics
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Nic'
                x-content-type: application/json
        "403":
          description: User is not allowed for NETWORK_GET
        "404":
          description: No network found with the given identifier
      security:
      - X-Auth-Token: []
  /nics:
    get:
      tags:
      - Nic operations
      summary: Lists all nics
      operationId: getAll
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Nic'
                x-content-type: application/json
        "403":
          description: User is not allowed for NIC_GET
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Nic operations
      summary: Updates a set of existing nics
      operationId: putAll
      parameters:
      - name: nameAsId
        in: query
        description: Use name instead of UUID as identifier
        schema:
          type: boolean
          default: false
      - name: computeNextIp
        in: query
        description: Compute next free IP in this network and assign it to this nic
        schema:
          type: boolean
          default: false
      - name: checkDuplicateIp
        in: query
        description: Check for IP duplication
        schema:
          type: boolean
          default: false
      - name: checkDuplicateMac
        in: query
        description: Check for MAC duplication
        schema:
          type: boolean
          default: false
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Updated nics definition
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Nic'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Nic'
                x-content-type: application/json
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for NIC_MODIFY
        "404":
          description: At least one supplied nic is not found
      security:
      - X-Auth-Token: []
    post:
      tags:
      - Nic operations
      summary: Creates one or multiple new nics
      operationId: addAll
      parameters:
      - name: networkId
        in: query
        description: Attach nic(s) to the given network
        schema:
          type: string
          example: resource42
      - name: nodeId
        in: query
        description: Attach nic(s) to the given node
        schema:
          type: string
          example: resource42
      - name: computeNextIp
        in: query
        description: Compute and set available IP when not defined
        schema:
          type: boolean
          default: false
      - name: checkDuplicateIp
        in: query
        description: Check for IP duplication
        schema:
          type: boolean
          default: false
      - name: checkDuplicateMac
        in: query
        description: Check for MAC duplication
        schema:
          type: boolean
          default: false
      requestBody:
        description: Nic(s) definition
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Nic'
        required: true
      responses:
        "201":
          description: Nic(s) successfully added
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for NIC_ADD
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Nic operations
      summary: Deletes a set of existing nics
      operationId: deleteAll
      parameters:
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Nics identifier
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleIdentifierDto'
      responses:
        "403":
          description: User is not allowed for NIC_DELETE
        "404":
          description: At least one supplied nic is not found
      security:
      - X-Auth-Token: []
  /nics/{identifier}:
    get:
      tags:
      - Nic operations
      summary: Gets one or more nic(s)
      operationId: get
      parameters:
      - name: identifier
        in: path
        description: Nic identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nic'
        "403":
          description: User is not allowed for NIC_GET
        "404":
          description: No nic found with the given identifier
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Nic operations
      summary: Updates an existing nic
      operationId: put
      parameters:
      - name: identifier
        in: path
        description: Nic identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: computeNextIp
        in: query
        description: Compute next free IP in this network and assign it to this nic
        schema:
          type: boolean
          default: false
      - name: checkDuplicateIp
        in: query
        description: Check for IP duplication
        schema:
          type: boolean
          default: false
      - name: checkDuplicateMac
        in: query
        description: Check for MAC duplication
        schema:
          type: boolean
          default: false
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Updated nic definition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nic'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nic'
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for NIC_MODIFY
        "404":
          description: No nic found with the given identifier
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Nic operations
      summary: Deletes an existing nic
      operationId: delete
      parameters:
      - name: identifier
        in: path
        description: Nic identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        "403":
          description: User is not allowed for NIC_DELETE
        "404":
          description: No nic found with the given identifier
      security:
      - X-Auth-Token: []
  /nics/attributes/{label}:
    get:
      tags:
      - Nic operations
      summary: Gets a global attribute defined for nics
      operationId: getGlobalAttribute
      parameters:
      - name: label
        in: path
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "403":
          description: User is not allowed for NIC_GET
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Nic operations
      summary: Deletes a global attribute defined for nics
      operationId: deleteGlobalAttribute
      parameters:
      - name: label
        in: path
        required: true
        schema:
          type: string
      responses:
        "403":
          description: User is not allowed for NIC_MODIFY
      security:
      - X-Auth-Token: []
  /nics/{identifier}/attributes:
    get:
      tags:
      - Nic operations
      summary: Gets all attributes of a single nic
      operationId: getAttributes
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "403":
          description: User is not allowed for NIC_GET
        "404":
          description: No nic found with the given identifier
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Nic operations
      summary: Adds or modifies attributes of an existing nic
      operationId: putAttributes
      parameters:
      - name: identifier
        in: path
        description: Nic identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      requestBody:
        description: Attributes to be added/modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributesDto'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for NIC_MODIFY
        "404":
          description: No nic found with the given identifier
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Nic operations
      summary: Removes all attributes of an existing nic
      operationId: deleteAttributes
      parameters:
      - name: identifier
        in: path
        description: Nic identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        "403":
          description: User is not allowed for NIC_MODIFY
        "404":
          description: No nic found with the given identifier
      security:
      - X-Auth-Token: []
  /nics/attributes:
    get:
      tags:
      - Nic operations
      summary: Gets all global attributes defined for nics
      operationId: getGlobalAttributes
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "403":
          description: User is not allowed for NIC_GET
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Nic operations
      summary: Adds or modifies global attributes for nics
      operationId: putGlobalAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributesDto'
      responses:
        "403":
          description: User is not allowed for NIC_MODIFY
      security:
      - X-Auth-Token: []
  /nodes/templates:
    get:
      tags:
      - Node template operations
      summary: Lists all templates
      operationId: getAll
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/NodeTemplate'
                x-content-type: application/json
        "403":
          description: User is not allowed for TEMPLATE_GET
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Node template operations
      summary: Updates a set of existing templates
      operationId: putAll
      parameters:
      - name: nameAsId
        in: query
        description: Use name instead of UUID as identifier
        schema:
          type: boolean
          default: false
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Updated templates definition
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NodeTemplate'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/NodeTemplate'
                x-content-type: application/json
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for TEMPLATE_MODIFY
        "404":
          description: At least one supplied template is not found
      security:
      - X-Auth-Token: []
    post:
      tags:
      - Node template operations
      summary: Creates one or multiple new templates
      operationId: addAll
      requestBody:
        description: Template(s) definition
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NodeTemplate'
        required: true
      responses:
        "201":
          description: Template(s) successfully added
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for TEMPLATE_ADD
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Node template operations
      summary: Deletes a set of existing templates
      operationId: deleteAll
      parameters:
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Templates identifier
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleIdentifierDto'
      responses:
        "403":
          description: User is not allowed for TEMPLATE_DELETE
        "404":
          description: At least one supplied template is not found
      security:
      - X-Auth-Token: []
  /nodes/templates/{identifier}:
    get:
      tags:
      - Node template operations
      summary: Gets one or more template(s)
      operationId: get
      parameters:
      - name: identifier
        in: path
        description: Template identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeTemplate'
        "403":
          description: User is not allowed for TEMPLATE_GET
        "404":
          description: No template found with the given identifier
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Node template operations
      summary: Updates an existing template
      operationId: put
      parameters:
      - name: identifier
        in: path
        description: Template identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Updated template definition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeTemplate'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeTemplate'
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for TEMPLATE_MODIFY
        "404":
          description: No template found with the given identifier
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Node template operations
      summary: Deletes an existing template
      operationId: delete
      parameters:
      - name: identifier
        in: path
        description: Template identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        "403":
          description: User is not allowed for TEMPLATE_DELETE
        "404":
          description: No template found with the given identifier
      security:
      - X-Auth-Token: []
  /nodes/templates/attributes/{label}:
    get:
      tags:
      - Node template operations
      summary: Gets a global attribute defined for templates
      operationId: getGlobalAttribute
      parameters:
      - name: label
        in: path
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "403":
          description: User is not allowed for TEMPLATE_GET
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Node template operations
      summary: Deletes a global attribute defined for templates
      operationId: deleteGlobalAttribute
      parameters:
      - name: label
        in: path
        required: true
        schema:
          type: string
      responses:
        "403":
          description: User is not allowed for TEMPLATE_MODIFY
      security:
      - X-Auth-Token: []
  /nodes/templates/{identifier}/attributes:
    get:
      tags:
      - Node template operations
      summary: Gets all attributes of a single template
      operationId: getAttributes
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "403":
          description: User is not allowed for TEMPLATE_GET
        "404":
          description: No template found with the given identifier
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Node template operations
      summary: Adds or modifies attributes of an existing template
      operationId: putAttributes
      parameters:
      - name: identifier
        in: path
        description: Template identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      requestBody:
        description: Attributes to be added/modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributesDto'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for TEMPLATE_MODIFY
        "404":
          description: No template found with the given identifier
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Node template operations
      summary: Remove all attributes of an existing template
      operationId: deleteAttributes
      parameters:
      - name: identifier
        in: path
        description: Template identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        "403":
          description: User is not allowed for TEMPLATE_MODIFY
        "404":
          description: No template found with the given identifier
      security:
      - X-Auth-Token: []
  /nodes/templates/attributes:
    get:
      tags:
      - Node template operations
      summary: Gets all global attributes defined for templates
      operationId: getGlobalAttributes
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "403":
          description: User is not allowed for TEMPLATE_GET
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Node template operations
      summary: Adds or modifies global attributes for templates
      operationId: putGlobalAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributesDto'
      responses:
        "403":
          description: User is not allowed for TEMPLATE_MODIFY
      security:
      - X-Auth-Token: []
  /nodes/templates/{identifier}/nictemplates/{network}:
    get:
      tags:
      - Node template operations
      summary: Get a nic templates for the given network from a given node template
      operationId: getNicTemplate
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
          example: resource42
      - name: network
        in: path
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NicTemplate'
        "403":
          description: User is not allowed for TEMPLATE_GET
        "404":
          description: No node template found with the given identifier
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Node template operations
      summary: Delete a nic template from the given node template
      operationId: deleteNicTemplate
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
          example: resource42
      - name: network
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NicTemplate'
        "403":
          description: User is not allowed for TEMPLATE_MODIFY
        "404":
          description: No node template found with the given identifier
      security:
      - X-Auth-Token: []
  /nodes/templates/{identifier}/nictemplates:
    get:
      tags:
      - Node template operations
      summary: Get all nic templates from a given node template
      operationId: getNicTemplates
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/NicTemplate'
                x-content-type: application/json
        "403":
          description: User is not allowed for TEMPLATE_GET
        "404":
          description: No node template found with the given identifier
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Node template operations
      summary: Add or replace a nic template to the given node template
      operationId: putNicTemplate
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
          example: resource42
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NicTemplate'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NicTemplate'
        "403":
          description: User is not allowed for TEMPLATE_MODIFY
        "404":
          description: No node template found with the given identifier
      security:
      - X-Auth-Token: []
  /nodes:
    get:
      tags:
      - Node operations
      summary: Lists all nodes
      operationId: getAll
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Node'
                x-content-type: application/json
        "403":
          description: User is not allowed for NODE_GET
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Node operations
      summary: Updates a set of existing nodes
      operationId: putAll
      parameters:
      - name: nameAsId
        in: query
        description: Use name instead of UUID as identifier
        schema:
          type: boolean
          default: false
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Updated nodes definition
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Node'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Node'
                x-content-type: application/json
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for NODE_MODIFY
        "404":
          description: At least one supplied node is not found
      security:
      - X-Auth-Token: []
    post:
      tags:
      - Node operations
      summary: Creates one or multiple new nodes
      operationId: addAll
      requestBody:
        description: Node(s) definition
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Node'
        required: true
      responses:
        "201":
          description: Node(s) successfully added
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for NODE_ADD
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Node operations
      summary: Deletes a set of existing nodes
      operationId: deleteAll
      parameters:
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Nodes identifier
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleIdentifierDto'
      responses:
        "403":
          description: User is not allowed for NODE_DELETE
        "404":
          description: At least one supplied node is not found
      security:
      - X-Auth-Token: []
  /nodes/{identifier}:
    get:
      tags:
      - Node operations
      summary: Gets one or more node(s)
      operationId: get
      parameters:
      - name: identifier
        in: path
        description: Node identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
        "403":
          description: User is not allowed for NODE_GET
        "404":
          description: No node found with the given identifier
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Node operations
      summary: Updates an existing node
      operationId: put
      parameters:
      - name: identifier
        in: path
        description: Node identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Updated node definition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for NODE_MODIFY
        "404":
          description: No node found with the given identifier
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Node operations
      summary: Deletes an existing node
      operationId: delete
      parameters:
      - name: identifier
        in: path
        description: Node identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        "403":
          description: User is not allowed for NODE_DELETE
        "404":
          description: No node found with the given identifier
      security:
      - X-Auth-Token: []
  /nodes/attributes/{label}:
    get:
      tags:
      - Node operations
      summary: Gets a global attribute defined for nodes
      operationId: getGlobalAttribute
      parameters:
      - name: label
        in: path
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "403":
          description: User is not allowed for NODE_GET
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Node operations
      summary: Deletes a global attribute defined for nodes
      operationId: deleteGlobalAttribute
      parameters:
      - name: label
        in: path
        required: true
        schema:
          type: string
      responses:
        "403":
          description: User is not allowed for NODE_MODIFY
      security:
      - X-Auth-Token: []
  /nodes/{identifier}/attributes:
    get:
      tags:
      - Node operations
      summary: Gets all attributes of a single node
      operationId: getAttributes
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "403":
          description: User is not allowed for NODE_GET
        "404":
          description: No node found with the given identifier
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Node operations
      summary: Adds or modifies attributes of an existing node
      operationId: putAttributes
      parameters:
      - name: identifier
        in: path
        description: Node identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      requestBody:
        description: Attributes to be added/modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributesDto'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for NODE_MODIFY
        "404":
          description: No node found with the given identifier
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Node operations
      summary: Removes all attributes of an existing node
      operationId: deleteAttributes
      parameters:
      - name: identifier
        in: path
        description: Node identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        "403":
          description: User is not allowed for NODE_MODIFY
        "404":
          description: No node found with the given identifier
      security:
      - X-Auth-Token: []
  /nodes/attributes:
    get:
      tags:
      - Node operations
      summary: Gets all global attributes defined for nodes
      operationId: getGlobalAttributes
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "403":
          description: User is not allowed for NODE_GET
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Node operations
      summary: Adds or modifies global attributes for nodes
      operationId: putGlobalAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributesDto'
      responses:
        "403":
          description: User is not allowed for NODE_MODIFY
      security:
      - X-Auth-Token: []
  /nodes/{identifier}/actions:
    get:
      tags:
      - Node operations
      summary: Gets list of available actions on an existing node
      operationId: getAvailableAction
      parameters:
      - name: identifier
        in: path
        description: Node identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Action'
                x-content-type: application/json
        "403":
          description: User is not allowed for NODE_ACTIONS
        "404":
          description: No node found with the given identifier
      security:
      - X-Auth-Token: []
  /nodes/{nodeId}/controller:
    get:
      tags:
      - Node operations
      summary: Get a node controller if existing
      operationId: getController
      parameters:
      - name: nodeId
        in: path
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Controller'
        "403":
          description: User is not allowed for NODE_GET
        "404":
          description: No controller defined for this node
      security:
      - X-Auth-Token: []
  /nodes/no_image:
    get:
      tags:
      - Node operations
      summary: Lists all nodes that are not in any image group
      operationId: getImageUnassigned
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Node'
                x-content-type: application/json
        "403":
          description: User is not allowed for NODE_GET
      security:
      - X-Auth-Token: []
    post:
      tags:
      - Node operations
      summary: Remove a set of nodes from their current image group
      operationId: unassignImage
      requestBody:
        description: Nodes identifier
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleIdentifierDto'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Node'
                x-content-type: application/json
        "403":
          description: User is not allowed for IMAGE_GROUP_MODIFY
        "404":
          description: At least one supplied node is not found
      security:
      - X-Auth-Token: []
  /nodes/no_network:
    get:
      tags:
      - Node operations
      summary: Lists all nodes that are not in any network group
      operationId: getNetworkUnassigned
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Node'
                x-content-type: application/json
        "403":
          description: User is not allowed for NODE_GET
      security:
      - X-Auth-Token: []
    post:
      tags:
      - Node operations
      summary: Remove a set of nodes from their current network group
      operationId: unassignNetwork
      requestBody:
        description: Nodes identifier
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleIdentifierDto'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Node'
                x-content-type: application/json
        "403":
          description: User is not allowed for NETWORK_GROUP_MODIFY
        "404":
          description: At least one supplied node is not found
      security:
      - X-Auth-Token: []
  /nodes/{nodeId}/nics/{nicId}:
    get:
      tags:
      - Node operations
      summary: Gets one nic of a single node
      operationId: getNic
      parameters:
      - name: nodeId
        in: path
        required: true
        schema:
          type: string
          example: resource42
      - name: nicId
        in: path
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nic'
        "403":
          description: User is not allowed for NODE_GET
        "404":
          description: No node found with the given identifier
      security:
      - X-Auth-Token: []
  /nodes/{identifier}/nics:
    get:
      tags:
      - Node operations
      summary: Gets all nics of a single node
      operationId: getNics
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Nic'
                x-content-type: application/json
        "403":
          description: User is not allowed for NODE_GET
        "404":
          description: No node found with the given identifier
      security:
      - X-Auth-Token: []
  /nodes/{identifier}/actions/{action}:
    post:
      tags:
      - Node operations
      summary: Runs an action on a set of existing nodes
      operationId: runAction
      parameters:
      - name: identifier
        in: path
        description: Node identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: action
        in: path
        description: Action
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "403":
          description: User is not allowed for NODE_ACTIONS
        "404":
          description: No node found with the given identifier
      security:
      - X-Auth-Token: []
  /sessions/{token}:
    get:
      tags:
      - Session operations
      summary: Gets a session
      operationId: getSession
      parameters:
      - name: token
        in: path
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Session operations
      summary: Deletes a session
      operationId: delete
      parameters:
      - name: token
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - X-Auth-Token: []
  /sessions:
    get:
      tags:
      - Session operations
      summary: Lists all sessions
      operationId: getAll
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - X-Auth-Token: []
    post:
      tags:
      - Session operations
      summary: Creates a new session
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginPasswordDTO'
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - X-Auth-Token: []
  /systemgroups:
    get:
      tags:
      - System Group operations
      summary: Lists all groups
      operationId: getAll
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Group'
                x-content-type: application/json
        "403":
          description: User is not allowed for ???_GROUP_GET
      security:
      - X-Auth-Token: []
    put:
      tags:
      - System Group operations
      summary: Updates a set of existing system groups
      operationId: putAll
      parameters:
      - name: nameAsId
        in: query
        description: Use name instead of UUID as identifier
        schema:
          type: boolean
          default: false
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Updated system groups definition
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SystemGroup'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/SystemGroup'
                x-content-type: application/json
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for SYSTEM_GROUP_MODIFY
        "404":
          description: At least one supplied system group is not found
      security:
      - X-Auth-Token: []
    post:
      tags:
      - System Group operations
      summary: Creates one or multiple new system group(s)
      operationId: addAll
      requestBody:
        description: System group(s) definition
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SystemGroup'
        required: true
      responses:
        "201":
          description: System group(s) successfully added
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for SYSTEM_GROUP_ADD
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - System Group operations
      summary: Deletes a set of existing system groups
      operationId: deleteAll
      parameters:
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: System groups identifier
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleIdentifierDto'
      responses:
        "403":
          description: User is not allowed for SYSTEM_GROUP_DELETE
        "404":
          description: At least one supplied system groups is not found
      security:
      - X-Auth-Token: []
  /systemgroups/{identifier}/nodes:
    get:
      tags:
      - System Group operations
      summary: Gets all nodes of an existing group
      operationId: getNodes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Node'
                x-content-type: application/json
        "403":
          description: User is not allowed for ???_GROUP_GET
        "404":
          description: No group with the given identifier
      security:
      - X-Auth-Token: []
    post:
      tags:
      - System Group operations
      summary: Adds nodes to an existing group
      operationId: addNodes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      requestBody:
        description: Nodes identifier
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleIdentifierDto'
        required: true
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
        "404":
          description: No group with the given identifier; at least one node not found
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - System Group operations
      summary: Removes some or all nodes from an existing group
      operationId: removeNodes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      requestBody:
        description: "Nodes identifier, or empty to remove all nodes"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleIdentifierDto'
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
        "404":
          description: No group with the given identifier; at least one node not found
            in given group
      security:
      - X-Auth-Token: []
  /systemgroups/{identifier}:
    get:
      tags:
      - System Group operations
      summary: Gets one or more group(s)
      operationId: get
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        "403":
          description: User is not allowed for ???_GROUP_GET
        "404":
          description: No group with the given identifier
      security:
      - X-Auth-Token: []
    put:
      tags:
      - System Group operations
      summary: Updates a existing system group
      operationId: put
      parameters:
      - name: identifier
        in: path
        description: System group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        description: Updated system group definition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemGroup'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemGroup'
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for SYSTEM_GROUP_MODIFY
        "404":
          description: No system group found with the given identifier
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - System Group operations
      summary: Deletes an existing system group
      operationId: delete
      parameters:
      - name: identifier
        in: path
        description: System group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        "403":
          description: User is not allowed for SYSTEM_GROUP_DELETE
        "404":
          description: No system group found with the given identifier
      security:
      - X-Auth-Token: []
  /systemgroups/attributes/{label}:
    get:
      tags:
      - System Group operations
      summary: Gets a global attribute defined for groups
      operationId: getAttribute
      parameters:
      - name: label
        in: path
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "403":
          description: User is not allowed for ???_GROUP_GET
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - System Group operations
      summary: Deletes a global attribute defined for groups
      operationId: deleteGlobalAttribute
      parameters:
      - name: label
        in: path
        required: true
        schema:
          type: string
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
      security:
      - X-Auth-Token: []
  /systemgroups/{identifier}/attributes:
    get:
      tags:
      - System Group operations
      summary: Gets all attributes of a single group
      operationId: getAttributes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "403":
          description: User is not allowed for ???_GROUP_GET
        "404":
          description: No group with the given identifier
      security:
      - X-Auth-Token: []
    put:
      tags:
      - System Group operations
      summary: Adds or modifies attributes of an existing group
      operationId: putAttributes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      requestBody:
        description: Attributes to be added/modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributesDto'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "400":
          description: Invalid input supplied
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
        "404":
          description: No group with the given identifier
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - System Group operations
      summary: Removes all attributes of an existing group
      operationId: deleteAttributes
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
        "404":
          description: No group with the given identifier
      security:
      - X-Auth-Token: []
  /systemgroups/attributes:
    get:
      tags:
      - System Group operations
      summary: Gets all global attributes defined for groups
      operationId: getGlobalAttributes
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
        "403":
          description: User is not allowed for ???_GROUP_GET
      security:
      - X-Auth-Token: []
    put:
      tags:
      - System Group operations
      summary: Adds or modifies global attributes for groups
      operationId: putGlobalAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributesDto'
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
      security:
      - X-Auth-Token: []
  /systemgroups/{identifier}/actions:
    get:
      tags:
      - System Group operations
      summary: Gets list of available actions on an existing group
      operationId: getAvailableAction
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        "403":
          description: User is not allowed for GROUP_ACTIONS
        "404":
          description: No group found with the given identifier
      security:
      - X-Auth-Token: []
  /systemgroups/{identifier}/nodes/{node_id}:
    get:
      tags:
      - System Group operations
      summary: Gets one node of an existing group
      operationId: getNode
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      - name: node_id
        in: path
        description: Node identifier
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
        "403":
          description: User is not allowed for ???_GROUP_GET
        "404":
          description: No group with the given identifier; given node not found in
            given group
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - System Group operations
      summary: Removes one node from an existing group
      operationId: removeNode
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: resource42
      - name: node_id
        in: path
        description: Node identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        "403":
          description: User is not allowed for ???_GROUP_MODIFY
        "404":
          description: No group with the given identifier; given node not found in
            given group
      security:
      - X-Auth-Token: []
  /systemgroups/{identifier}/actions/{action}:
    post:
      tags:
      - System Group operations
      summary: Runs an action on a set of existing groups
      operationId: runAction
      parameters:
      - name: identifier
        in: path
        description: Group identifier
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: action
        in: path
        description: Action
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "403":
          description: User is not allowed for GROUP_ACTIONS
        "404":
          description: No node found with the given identifier
      security:
      - X-Auth-Token: []
  /tasks/{identifier}:
    get:
      tags:
      - Tasks operations
      operationId: get
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Tasks operations
      summary: Deletes a single task
      operationId: delete
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - X-Auth-Token: []
  /tasks:
    get:
      tags:
      - Tasks operations
      operationId: getAll
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: allowsEmpty
        in: query
        description: Do not fail when no resource is matched
        required: false
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Task'
                x-content-type: application/json
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Tasks operations
      summary: Deletes a set of task
      operationId: deleteAll
      parameters:
      - name: where
        in: query
        description: Filter resources matching provided where clause
        required: false
        schema:
          type: string
      - name: force
        in: query
        description: Force operation when more than one resource is matched
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleIdentifierDto'
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - X-Auth-Token: []
  /tasks/{identifier}/attributes:
    get:
      tags:
      - Tasks operations
      operationId: getAttributes
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
          example: resource42
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
      security:
      - X-Auth-Token: []
    put:
      tags:
      - Tasks operations
      operationId: putAttributes
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributesDto'
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
      security:
      - X-Auth-Token: []
    delete:
      tags:
      - Tasks operations
      operationId: deleteAttributes
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
          example: "resource[1-4],resource42"
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                x-content-type: application/json
      security:
      - X-Auth-Token: []
  /application.wadl/{path}:
    get:
      operationId: getExternalGrammar
      parameters:
      - name: path
        in: path
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: default response
          content:
            application/xml: {}
  /application.wadl:
    get:
      operationId: getWadl
      parameters:
      - name: fields
        in: query
        description: Fields to display
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: default response
          content:
            application/vnd.sun.wadl+xml: {}
            application/xml: {}
components:
  schemas:
    Alert:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        etag:
          type: string
          readOnly: true
        creationTime:
          type: string
          format: date-time
          readOnly: true
        modificationTime:
          type: string
          format: date-time
          readOnly: true
        deletionTime:
          type: string
          format: date-time
          readOnly: true
        links:
          type: object
          additionalProperties:
            type: string
            format: uri
            readOnly: true
          readOnly: true
        type:
          type: string
          enum:
          - unknown
          - integer
          - real
          - string
          - percent
          - numerical
        timeMultiple:
          type: integer
          format: int32
        message:
          type: string
        defaultMaxValue:
          type: number
          format: float
        unit:
          type: string
        command:
          type: string
        status:
          type: string
          enum:
          - OK
          - Too long to perform
          - Inactive action
          - Not representative
          - Undefined
        level:
          type: string
          enum:
          - "1"
          - "2"
          - "3"
          - "4"
          - "5"
        threshold:
          type: string
        comparisonSign:
          type: string
          enum:
          - ==
          - '!='
          - '>'
          - '>='
          - <
          - <=
        numeric:
          type: boolean
        extended:
          type: boolean
        attributes:
          type: object
          additionalProperties:
            type: object
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        level: "1"
        numeric: true
        deletionTime: 2000-01-23T04:56:07.000+00:00
        defaultMaxValue: 1.4658129
        threshold: threshold
        type: unknown
        message: message
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        command: command
        extended: true
        unit: unit
        modificationTime: 2000-01-23T04:56:07.000+00:00
        name: name
        timeMultiple: 6
        etag: etag
        links:
          links: http://example.com/aeiou
        attributes:
          attributes: {}
        id: 0
        comparisonSign: ==
        status: OK
    AttributeMapObject:
      type: object
    Architecture:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        etag:
          type: string
          readOnly: true
        creationTime:
          type: string
          format: date-time
          readOnly: true
        modificationTime:
          type: string
          format: date-time
          readOnly: true
        deletionTime:
          type: string
          format: date-time
          readOnly: true
        links:
          type: object
          additionalProperties:
            type: string
            format: uri
            readOnly: true
          readOnly: true
        platforms:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Platform'
        attributes:
          type: object
          additionalProperties:
            type: object
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        modificationTime: 2000-01-23T04:56:07.000+00:00
        name: name
        etag: etag
        deletionTime: 2000-01-23T04:56:07.000+00:00
        links:
          links: http://example.com/aeiou
        attributes:
          attributes: {}
        id: 0
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        platforms:
        - creationTime: 2000-01-23T04:56:07.000+00:00
          modificationTime: 2000-01-23T04:56:07.000+00:00
          name: name
          etag: etag
          deletionTime: 2000-01-23T04:56:07.000+00:00
          links:
            links: http://example.com/aeiou
          attributes:
            attributes: {}
          id: 6
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          architecture: null
        - creationTime: 2000-01-23T04:56:07.000+00:00
          modificationTime: 2000-01-23T04:56:07.000+00:00
          name: name
          etag: etag
          deletionTime: 2000-01-23T04:56:07.000+00:00
          links:
            links: http://example.com/aeiou
          attributes:
            attributes: {}
          id: 6
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          architecture: null
    Platform:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        etag:
          type: string
          readOnly: true
        creationTime:
          type: string
          format: date-time
          readOnly: true
        modificationTime:
          type: string
          format: date-time
          readOnly: true
        deletionTime:
          type: string
          format: date-time
          readOnly: true
        links:
          type: object
          additionalProperties:
            type: string
            format: uri
            readOnly: true
          readOnly: true
        architecture:
          $ref: '#/components/schemas/Architecture'
        attributes:
          type: object
          additionalProperties:
            type: object
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        modificationTime: 2000-01-23T04:56:07.000+00:00
        name: name
        etag: etag
        deletionTime: 2000-01-23T04:56:07.000+00:00
        links:
          links: http://example.com/aeiou
        attributes:
          attributes: {}
        id: 6
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        architecture: null
    Controller:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        etag:
          type: string
          readOnly: true
        creationTime:
          type: string
          format: date-time
          readOnly: true
        modificationTime:
          type: string
          format: date-time
          readOnly: true
        deletionTime:
          type: string
          format: date-time
          readOnly: true
        links:
          type: object
          additionalProperties:
            type: string
            format: uri
            readOnly: true
          readOnly: true
        nodes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Node'
        nic:
          $ref: '#/components/schemas/Nic'
        type:
          type: string
        templateName:
          type: string
        ipAddress:
          type: string
          readOnly: true
          example: 0.0.0.0
        macAddress:
          type: string
          readOnly: true
          example: 00:00:00:00:00:00
        protocol:
          type: string
          example: default
        channel:
          type: integer
          format: int32
        username:
          type: string
          example: admin
        password:
          type: string
          example: password
        administrativeStatus:
          type: integer
          format: int32
        location:
          $ref: '#/components/schemas/LocationSettings'
        inventory:
          type: object
        attributes:
          type: object
          additionalProperties:
            type: object
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        administrativeStatus: 1
        ipAddress: 0.0.0.0
        channel: 6
        nic:
          nodeName: nodeName
          controller: controller
          creationTime: 2000-01-23T04:56:07.000+00:00
          ipv6Address: 2001:db8:0:85a3::ac1f:8001
          ipAddress: 0.0.0.0
          networkName: networkName
          deletionTime: 2000-01-23T04:56:07.000+00:00
          bondingMaster: bondingMaster
          type: public
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          network: network
          node: node
          macAddress: 00:00:00:00:00:00
          modificationTime: 2000-01-23T04:56:07.000+00:00
          managed: true
          bondingMode: bondingMode
          controllerName: controllerName
          name: name
          etag: etag
          links:
            links: http://example.com/aeiou
          attributes:
            attributes: {}
          id: 1
          interfaceName: interfaceName
        deletionTime: 2000-01-23T04:56:07.000+00:00
        type: type
        inventory: {}
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        macAddress: 00:00:00:00:00:00
        protocol: default
        password: password
        nodes:
        - operationalStatus: 4
          aliases:
            aliases: aliases
          creationTime: 2000-01-23T04:56:07.000+00:00
          imagePending: true
          administrativeStatus: 7
          deletionTime: 2000-01-23T04:56:07.000+00:00
          type: type
          inventory: {}
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          imageTransport: imageTransport
          rootSlot: 1
          platform:
            name: generic
            vendorsArgs: vendorsArgs
            serialPort: serialPort
            serialPortSpeed: serialPortSpeed
            architecture: x86_64
          network:
            macAddress: macAddress
            mgmtServerIp: mgmtServerIp
            name: name
            nics:
            - nodeName: nodeName
              controller: controller
              creationTime: 2000-01-23T04:56:07.000+00:00
              ipv6Address: 2001:db8:0:85a3::ac1f:8001
              ipAddress: 0.0.0.0
              networkName: networkName
              deletionTime: 2000-01-23T04:56:07.000+00:00
              bondingMaster: bondingMaster
              type: public
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              network: network
              node: node
              macAddress: 00:00:00:00:00:00
              modificationTime: 2000-01-23T04:56:07.000+00:00
              managed: true
              bondingMode: bondingMode
              controllerName: controllerName
              name: name
              etag: etag
              links:
                links: http://example.com/aeiou
              attributes:
                attributes: {}
              id: 1
              interfaceName: interfaceName
            - nodeName: nodeName
              controller: controller
              creationTime: 2000-01-23T04:56:07.000+00:00
              ipv6Address: 2001:db8:0:85a3::ac1f:8001
              ipAddress: 0.0.0.0
              networkName: networkName
              deletionTime: 2000-01-23T04:56:07.000+00:00
              bondingMaster: bondingMaster
              type: public
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              network: network
              node: node
              macAddress: 00:00:00:00:00:00
              modificationTime: 2000-01-23T04:56:07.000+00:00
              managed: true
              bondingMode: bondingMode
              controllerName: controllerName
              name: name
              etag: etag
              links:
                links: http://example.com/aeiou
              attributes:
                attributes: {}
              id: 1
              interfaceName: interfaceName
            ipAddress: ipAddress
            subnetMask: subnetMask
            defaultGateway: default
          internalName: internalName
          bootOrder: 1
          modificationTime: 2000-01-23T04:56:07.000+00:00
          managed: true
          rootFs: rootFs
          links:
            links: http://example.com/aeiou
          id: 6
          image:
            cloningDate: 2000-01-23T04:56:07.000+00:00
            kernel: kernel
            name: name
            cloningBlockDevice: cloningBlockDevice
          controller:
            macAddress: 00:00:00:00:00:00
            protocol: default
            password: password
            ipAddress: 0.0.0.0
            channel: 5
            type: none
            username: admin
          monitoring: NATIVE
          management:
            cardMacAddress: 00:00:00:00:00:00
            protocol: default
            password: password
            cardIpAddress: 0.0.0.0
            cardType: none
            channel: 5
            username: admin
          templateName: templateName
          nodeController: nodeController
          biosBootMode: AUTO
          name: name
          etag: etag
          location:
            tray: 9
            node: 3
            rack: 2
            controller: 2
            chassis: 7
          attributes:
            attributes: {}
          iscsiRoot: iscsiRoot
        - operationalStatus: 4
          aliases:
            aliases: aliases
          creationTime: 2000-01-23T04:56:07.000+00:00
          imagePending: true
          administrativeStatus: 7
          deletionTime: 2000-01-23T04:56:07.000+00:00
          type: type
          inventory: {}
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          imageTransport: imageTransport
          rootSlot: 1
          platform:
            name: generic
            vendorsArgs: vendorsArgs
            serialPort: serialPort
            serialPortSpeed: serialPortSpeed
            architecture: x86_64
          network:
            macAddress: macAddress
            mgmtServerIp: mgmtServerIp
            name: name
            nics:
            - nodeName: nodeName
              controller: controller
              creationTime: 2000-01-23T04:56:07.000+00:00
              ipv6Address: 2001:db8:0:85a3::ac1f:8001
              ipAddress: 0.0.0.0
              networkName: networkName
              deletionTime: 2000-01-23T04:56:07.000+00:00
              bondingMaster: bondingMaster
              type: public
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              network: network
              node: node
              macAddress: 00:00:00:00:00:00
              modificationTime: 2000-01-23T04:56:07.000+00:00
              managed: true
              bondingMode: bondingMode
              controllerName: controllerName
              name: name
              etag: etag
              links:
                links: http://example.com/aeiou
              attributes:
                attributes: {}
              id: 1
              interfaceName: interfaceName
            - nodeName: nodeName
              controller: controller
              creationTime: 2000-01-23T04:56:07.000+00:00
              ipv6Address: 2001:db8:0:85a3::ac1f:8001
              ipAddress: 0.0.0.0
              networkName: networkName
              deletionTime: 2000-01-23T04:56:07.000+00:00
              bondingMaster: bondingMaster
              type: public
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              network: network
              node: node
              macAddress: 00:00:00:00:00:00
              modificationTime: 2000-01-23T04:56:07.000+00:00
              managed: true
              bondingMode: bondingMode
              controllerName: controllerName
              name: name
              etag: etag
              links:
                links: http://example.com/aeiou
              attributes:
                attributes: {}
              id: 1
              interfaceName: interfaceName
            ipAddress: ipAddress
            subnetMask: subnetMask
            defaultGateway: default
          internalName: internalName
          bootOrder: 1
          modificationTime: 2000-01-23T04:56:07.000+00:00
          managed: true
          rootFs: rootFs
          links:
            links: http://example.com/aeiou
          id: 6
          image:
            cloningDate: 2000-01-23T04:56:07.000+00:00
            kernel: kernel
            name: name
            cloningBlockDevice: cloningBlockDevice
          controller:
            macAddress: 00:00:00:00:00:00
            protocol: default
            password: password
            ipAddress: 0.0.0.0
            channel: 5
            type: none
            username: admin
          monitoring: NATIVE
          management:
            cardMacAddress: 00:00:00:00:00:00
            protocol: default
            password: password
            cardIpAddress: 0.0.0.0
            cardType: none
            channel: 5
            username: admin
          templateName: templateName
          nodeController: nodeController
          biosBootMode: AUTO
          name: name
          etag: etag
          location:
            tray: 9
            node: 3
            rack: 2
            controller: 2
            chassis: 7
          attributes:
            attributes: {}
          iscsiRoot: iscsiRoot
        templateName: templateName
        modificationTime: 2000-01-23T04:56:07.000+00:00
        name: name
        etag: etag
        links:
          links: http://example.com/aeiou
        location:
          tray: 9
          node: 3
          rack: 2
          controller: 2
          chassis: 7
        attributes:
          attributes: {}
        id: 0
        username: admin
    ControllerSettings:
      type: object
      properties:
        type:
          type: string
          example: none
        ipAddress:
          type: string
          readOnly: true
          example: 0.0.0.0
        macAddress:
          type: string
          readOnly: true
          example: 00:00:00:00:00:00
        protocol:
          type: string
          example: default
        channel:
          type: integer
          format: int32
        username:
          type: string
          example: admin
        password:
          type: string
          example: password
      example:
        macAddress: 00:00:00:00:00:00
        protocol: default
        password: password
        ipAddress: 0.0.0.0
        channel: 5
        type: none
        username: admin
    ImageSettings:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        kernel:
          type: string
        cloningBlockDevice:
          type: string
        cloningDate:
          type: string
          format: date-time
      example:
        cloningDate: 2000-01-23T04:56:07.000+00:00
        kernel: kernel
        name: name
        cloningBlockDevice: cloningBlockDevice
    LocationSettings:
      type: object
      properties:
        rack:
          type: integer
          format: int32
        chassis:
          type: integer
          format: int32
        tray:
          type: integer
          format: int32
        node:
          type: integer
          format: int32
        controller:
          type: integer
          format: int32
      example:
        tray: 9
        node: 3
        rack: 2
        controller: 2
        chassis: 7
    ManagementSettings:
      type: object
      properties:
        cardType:
          type: string
          example: none
        cardIpAddress:
          type: string
          readOnly: true
          example: 0.0.0.0
        cardMacAddress:
          type: string
          readOnly: true
          example: 00:00:00:00:00:00
        protocol:
          type: string
          example: default
        channel:
          type: integer
          format: int32
        username:
          type: string
          example: admin
        password:
          type: string
          example: password
      example:
        cardMacAddress: 00:00:00:00:00:00
        protocol: default
        password: password
        cardIpAddress: 0.0.0.0
        cardType: none
        channel: 5
        username: admin
    NetworkSettings:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        defaultGateway:
          type: string
          example: default
        nics:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Nic'
        ipAddress:
          type: string
          readOnly: true
        macAddress:
          type: string
          readOnly: true
        subnetMask:
          type: string
          readOnly: true
        mgmtServerIp:
          type: string
          readOnly: true
      example:
        macAddress: macAddress
        mgmtServerIp: mgmtServerIp
        name: name
        nics:
        - nodeName: nodeName
          controller: controller
          creationTime: 2000-01-23T04:56:07.000+00:00
          ipv6Address: 2001:db8:0:85a3::ac1f:8001
          ipAddress: 0.0.0.0
          networkName: networkName
          deletionTime: 2000-01-23T04:56:07.000+00:00
          bondingMaster: bondingMaster
          type: public
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          network: network
          node: node
          macAddress: 00:00:00:00:00:00
          modificationTime: 2000-01-23T04:56:07.000+00:00
          managed: true
          bondingMode: bondingMode
          controllerName: controllerName
          name: name
          etag: etag
          links:
            links: http://example.com/aeiou
          attributes:
            attributes: {}
          id: 1
          interfaceName: interfaceName
        - nodeName: nodeName
          controller: controller
          creationTime: 2000-01-23T04:56:07.000+00:00
          ipv6Address: 2001:db8:0:85a3::ac1f:8001
          ipAddress: 0.0.0.0
          networkName: networkName
          deletionTime: 2000-01-23T04:56:07.000+00:00
          bondingMaster: bondingMaster
          type: public
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          network: network
          node: node
          macAddress: 00:00:00:00:00:00
          modificationTime: 2000-01-23T04:56:07.000+00:00
          managed: true
          bondingMode: bondingMode
          controllerName: controllerName
          name: name
          etag: etag
          links:
            links: http://example.com/aeiou
          attributes:
            attributes: {}
          id: 1
          interfaceName: interfaceName
        ipAddress: ipAddress
        subnetMask: subnetMask
        defaultGateway: default
    Nic:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        etag:
          type: string
          readOnly: true
        creationTime:
          type: string
          format: date-time
          readOnly: true
        modificationTime:
          type: string
          format: date-time
          readOnly: true
        deletionTime:
          type: string
          format: date-time
          readOnly: true
        links:
          type: object
          additionalProperties:
            type: string
            format: uri
            readOnly: true
          readOnly: true
        network:
          type: string
          description: Write-only field to configure the network this nic is attached
            to at creation time
          writeOnly: true
        ipAddress:
          type: string
          example: 0.0.0.0
        ipv6Address:
          type: string
          example: 2001:db8:0:85a3::ac1f:8001
        macAddress:
          type: string
          example: 00:00:00:00:00:00
        bondingMaster:
          type: string
        bondingMode:
          type: string
        interfaceName:
          type: string
        managed:
          type: boolean
        type:
          type: string
          readOnly: true
          example: public
        node:
          type: string
          description: Write-only field to configure the node this nic is attached
            to at creation time
          writeOnly: true
        nodeName:
          type: string
        controller:
          type: string
          description: Write-only field to configure the controller this nic is attached
            to at creation time
          writeOnly: true
        controllerName:
          type: string
        networkName:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: object
      example:
        nodeName: nodeName
        controller: controller
        creationTime: 2000-01-23T04:56:07.000+00:00
        ipv6Address: 2001:db8:0:85a3::ac1f:8001
        ipAddress: 0.0.0.0
        networkName: networkName
        deletionTime: 2000-01-23T04:56:07.000+00:00
        bondingMaster: bondingMaster
        type: public
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        network: network
        node: node
        macAddress: 00:00:00:00:00:00
        modificationTime: 2000-01-23T04:56:07.000+00:00
        managed: true
        bondingMode: bondingMode
        controllerName: controllerName
        name: name
        etag: etag
        links:
          links: http://example.com/aeiou
        attributes:
          attributes: {}
        id: 1
        interfaceName: interfaceName
    Node:
      type: object
      properties:
        name:
          type: string
        aliases:
          type: object
          additionalProperties:
            type: string
        id:
          type: integer
          format: int64
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        etag:
          type: string
          readOnly: true
        creationTime:
          type: string
          format: date-time
          readOnly: true
        modificationTime:
          type: string
          format: date-time
          readOnly: true
        deletionTime:
          type: string
          format: date-time
          readOnly: true
        links:
          type: object
          additionalProperties:
            type: string
            format: uri
            readOnly: true
          readOnly: true
        network:
          $ref: '#/components/schemas/NetworkSettings'
        image:
          $ref: '#/components/schemas/ImageSettings'
        platform:
          $ref: '#/components/schemas/PlatformSettings'
        management:
          $ref: '#/components/schemas/ManagementSettings'
        controller:
          $ref: '#/components/schemas/ControllerSettings'
        location:
          $ref: '#/components/schemas/LocationSettings'
        internalName:
          type: string
        type:
          type: string
          readOnly: true
        imageTransport:
          type: string
        imagePending:
          type: boolean
        templateName:
          type: string
        rootFs:
          type: string
        operationalStatus:
          type: integer
          format: int32
        administrativeStatus:
          type: integer
          format: int32
        managed:
          type: boolean
        monitoring:
          type: string
          example: NATIVE
          enum:
          - none
          - native
          - ldms
        rootSlot:
          type: integer
          format: int32
        biosBootMode:
          type: string
          example: AUTO
          enum:
          - auto
          - pxe
          - uefi
        bootOrder:
          type: integer
          format: int32
        iscsiRoot:
          type: string
        inventory:
          type: object
        nodeController:
          type: string
          description: Write-only field to configure the controller this node is attached
            to at creation time
          writeOnly: true
        attributes:
          type: object
          additionalProperties:
            type: object
      example:
        operationalStatus: 4
        aliases:
          aliases: aliases
        creationTime: 2000-01-23T04:56:07.000+00:00
        imagePending: true
        administrativeStatus: 7
        deletionTime: 2000-01-23T04:56:07.000+00:00
        type: type
        inventory: {}
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        imageTransport: imageTransport
        rootSlot: 1
        platform:
          name: generic
          vendorsArgs: vendorsArgs
          serialPort: serialPort
          serialPortSpeed: serialPortSpeed
          architecture: x86_64
        network:
          macAddress: macAddress
          mgmtServerIp: mgmtServerIp
          name: name
          nics:
          - nodeName: nodeName
            controller: controller
            creationTime: 2000-01-23T04:56:07.000+00:00
            ipv6Address: 2001:db8:0:85a3::ac1f:8001
            ipAddress: 0.0.0.0
            networkName: networkName
            deletionTime: 2000-01-23T04:56:07.000+00:00
            bondingMaster: bondingMaster
            type: public
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            network: network
            node: node
            macAddress: 00:00:00:00:00:00
            modificationTime: 2000-01-23T04:56:07.000+00:00
            managed: true
            bondingMode: bondingMode
            controllerName: controllerName
            name: name
            etag: etag
            links:
              links: http://example.com/aeiou
            attributes:
              attributes: {}
            id: 1
            interfaceName: interfaceName
          - nodeName: nodeName
            controller: controller
            creationTime: 2000-01-23T04:56:07.000+00:00
            ipv6Address: 2001:db8:0:85a3::ac1f:8001
            ipAddress: 0.0.0.0
            networkName: networkName
            deletionTime: 2000-01-23T04:56:07.000+00:00
            bondingMaster: bondingMaster
            type: public
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            network: network
            node: node
            macAddress: 00:00:00:00:00:00
            modificationTime: 2000-01-23T04:56:07.000+00:00
            managed: true
            bondingMode: bondingMode
            controllerName: controllerName
            name: name
            etag: etag
            links:
              links: http://example.com/aeiou
            attributes:
              attributes: {}
            id: 1
            interfaceName: interfaceName
          ipAddress: ipAddress
          subnetMask: subnetMask
          defaultGateway: default
        internalName: internalName
        bootOrder: 1
        modificationTime: 2000-01-23T04:56:07.000+00:00
        managed: true
        rootFs: rootFs
        links:
          links: http://example.com/aeiou
        id: 6
        image:
          cloningDate: 2000-01-23T04:56:07.000+00:00
          kernel: kernel
          name: name
          cloningBlockDevice: cloningBlockDevice
        controller:
          macAddress: 00:00:00:00:00:00
          protocol: default
          password: password
          ipAddress: 0.0.0.0
          channel: 5
          type: none
          username: admin
        monitoring: NATIVE
        management:
          cardMacAddress: 00:00:00:00:00:00
          protocol: default
          password: password
          cardIpAddress: 0.0.0.0
          cardType: none
          channel: 5
          username: admin
        templateName: templateName
        nodeController: nodeController
        biosBootMode: AUTO
        name: name
        etag: etag
        location:
          tray: 9
          node: 3
          rack: 2
          controller: 2
          chassis: 7
        attributes:
          attributes: {}
        iscsiRoot: iscsiRoot
    PlatformSettings:
      type: object
      properties:
        name:
          type: string
          example: generic
        architecture:
          type: string
          example: x86_64
        serialPort:
          type: string
        serialPortSpeed:
          type: string
        vendorsArgs:
          type: string
      example:
        name: generic
        vendorsArgs: vendorsArgs
        serialPort: serialPort
        serialPortSpeed: serialPortSpeed
        architecture: x86_64
    MultipleIdentifierDto:
      type: object
      properties:
        identifiers:
          type: array
          items:
            type: string
            example: resource42
    Group:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        etag:
          type: string
          readOnly: true
        creationTime:
          type: string
          format: date-time
          readOnly: true
        modificationTime:
          type: string
          format: date-time
          readOnly: true
        deletionTime:
          type: string
          format: date-time
          readOnly: true
        links:
          type: object
          additionalProperties:
            type: string
            format: uri
            readOnly: true
          readOnly: true
        nodes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Node'
        attributes:
          type: object
          additionalProperties:
            type: object
      example:
        nodes:
        - operationalStatus: 4
          aliases:
            aliases: aliases
          creationTime: 2000-01-23T04:56:07.000+00:00
          imagePending: true
          administrativeStatus: 7
          deletionTime: 2000-01-23T04:56:07.000+00:00
          type: type
          inventory: {}
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          imageTransport: imageTransport
          rootSlot: 1
          platform:
            name: generic
            vendorsArgs: vendorsArgs
            serialPort: serialPort
            serialPortSpeed: serialPortSpeed
            architecture: x86_64
          network:
            macAddress: macAddress
            mgmtServerIp: mgmtServerIp
            name: name
            nics:
            - nodeName: nodeName
              controller: controller
              creationTime: 2000-01-23T04:56:07.000+00:00
              ipv6Address: 2001:db8:0:85a3::ac1f:8001
              ipAddress: 0.0.0.0
              networkName: networkName
              deletionTime: 2000-01-23T04:56:07.000+00:00
              bondingMaster: bondingMaster
              type: public
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              network: network
              node: node
              macAddress: 00:00:00:00:00:00
              modificationTime: 2000-01-23T04:56:07.000+00:00
              managed: true
              bondingMode: bondingMode
              controllerName: controllerName
              name: name
              etag: etag
              links:
                links: http://example.com/aeiou
              attributes:
                attributes: {}
              id: 1
              interfaceName: interfaceName
            - nodeName: nodeName
              controller: controller
              creationTime: 2000-01-23T04:56:07.000+00:00
              ipv6Address: 2001:db8:0:85a3::ac1f:8001
              ipAddress: 0.0.0.0
              networkName: networkName
              deletionTime: 2000-01-23T04:56:07.000+00:00
              bondingMaster: bondingMaster
              type: public
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              network: network
              node: node
              macAddress: 00:00:00:00:00:00
              modificationTime: 2000-01-23T04:56:07.000+00:00
              managed: true
              bondingMode: bondingMode
              controllerName: controllerName
              name: name
              etag: etag
              links:
                links: http://example.com/aeiou
              attributes:
                attributes: {}
              id: 1
              interfaceName: interfaceName
            ipAddress: ipAddress
            subnetMask: subnetMask
            defaultGateway: default
          internalName: internalName
          bootOrder: 1
          modificationTime: 2000-01-23T04:56:07.000+00:00
          managed: true
          rootFs: rootFs
          links:
            links: http://example.com/aeiou
          id: 6
          image:
            cloningDate: 2000-01-23T04:56:07.000+00:00
            kernel: kernel
            name: name
            cloningBlockDevice: cloningBlockDevice
          controller:
            macAddress: 00:00:00:00:00:00
            protocol: default
            password: password
            ipAddress: 0.0.0.0
            channel: 5
            type: none
            username: admin
          monitoring: NATIVE
          management:
            cardMacAddress: 00:00:00:00:00:00
            protocol: default
            password: password
            cardIpAddress: 0.0.0.0
            cardType: none
            channel: 5
            username: admin
          templateName: templateName
          nodeController: nodeController
          biosBootMode: AUTO
          name: name
          etag: etag
          location:
            tray: 9
            node: 3
            rack: 2
            controller: 2
            chassis: 7
          attributes:
            attributes: {}
          iscsiRoot: iscsiRoot
        - operationalStatus: 4
          aliases:
            aliases: aliases
          creationTime: 2000-01-23T04:56:07.000+00:00
          imagePending: true
          administrativeStatus: 7
          deletionTime: 2000-01-23T04:56:07.000+00:00
          type: type
          inventory: {}
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          imageTransport: imageTransport
          rootSlot: 1
          platform:
            name: generic
            vendorsArgs: vendorsArgs
            serialPort: serialPort
            serialPortSpeed: serialPortSpeed
            architecture: x86_64
          network:
            macAddress: macAddress
            mgmtServerIp: mgmtServerIp
            name: name
            nics:
            - nodeName: nodeName
              controller: controller
              creationTime: 2000-01-23T04:56:07.000+00:00
              ipv6Address: 2001:db8:0:85a3::ac1f:8001
              ipAddress: 0.0.0.0
              networkName: networkName
              deletionTime: 2000-01-23T04:56:07.000+00:00
              bondingMaster: bondingMaster
              type: public
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              network: network
              node: node
              macAddress: 00:00:00:00:00:00
              modificationTime: 2000-01-23T04:56:07.000+00:00
              managed: true
              bondingMode: bondingMode
              controllerName: controllerName
              name: name
              etag: etag
              links:
                links: http://example.com/aeiou
              attributes:
                attributes: {}
              id: 1
              interfaceName: interfaceName
            - nodeName: nodeName
              controller: controller
              creationTime: 2000-01-23T04:56:07.000+00:00
              ipv6Address: 2001:db8:0:85a3::ac1f:8001
              ipAddress: 0.0.0.0
              networkName: networkName
              deletionTime: 2000-01-23T04:56:07.000+00:00
              bondingMaster: bondingMaster
              type: public
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              network: network
              node: node
              macAddress: 00:00:00:00:00:00
              modificationTime: 2000-01-23T04:56:07.000+00:00
              managed: true
              bondingMode: bondingMode
              controllerName: controllerName
              name: name
              etag: etag
              links:
                links: http://example.com/aeiou
              attributes:
                attributes: {}
              id: 1
              interfaceName: interfaceName
            ipAddress: ipAddress
            subnetMask: subnetMask
            defaultGateway: default
          internalName: internalName
          bootOrder: 1
          modificationTime: 2000-01-23T04:56:07.000+00:00
          managed: true
          rootFs: rootFs
          links:
            links: http://example.com/aeiou
          id: 6
          image:
            cloningDate: 2000-01-23T04:56:07.000+00:00
            kernel: kernel
            name: name
            cloningBlockDevice: cloningBlockDevice
          controller:
            macAddress: 00:00:00:00:00:00
            protocol: default
            password: password
            ipAddress: 0.0.0.0
            channel: 5
            type: none
            username: admin
          monitoring: NATIVE
          management:
            cardMacAddress: 00:00:00:00:00:00
            protocol: default
            password: password
            cardIpAddress: 0.0.0.0
            cardType: none
            channel: 5
            username: admin
          templateName: templateName
          nodeController: nodeController
          biosBootMode: AUTO
          name: name
          etag: etag
          location:
            tray: 9
            node: 3
            rack: 2
            controller: 2
            chassis: 7
          attributes:
            attributes: {}
          iscsiRoot: iscsiRoot
        creationTime: 2000-01-23T04:56:07.000+00:00
        modificationTime: 2000-01-23T04:56:07.000+00:00
        name: name
        etag: etag
        deletionTime: 2000-01-23T04:56:07.000+00:00
        links:
          links: http://example.com/aeiou
        attributes:
          attributes: {}
        id: 0
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    AttributesDto:
      type: object
      properties:
        attributes:
          type: string
    CustomGroup:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        etag:
          type: string
          readOnly: true
        creationTime:
          type: string
          format: date-time
          readOnly: true
        modificationTime:
          type: string
          format: date-time
          readOnly: true
        deletionTime:
          type: string
          format: date-time
          readOnly: true
        links:
          type: object
          additionalProperties:
            type: string
            format: uri
            readOnly: true
          readOnly: true
        nodes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Node'
        attributes:
          type: object
          additionalProperties:
            type: object
      example:
        nodes:
        - operationalStatus: 4
          aliases:
            aliases: aliases
          creationTime: 2000-01-23T04:56:07.000+00:00
          imagePending: true
          administrativeStatus: 7
          deletionTime: 2000-01-23T04:56:07.000+00:00
          type: type
          inventory: {}
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          imageTransport: imageTransport
          rootSlot: 1
          platform:
            name: generic
            vendorsArgs: vendorsArgs
            serialPort: serialPort
            serialPortSpeed: serialPortSpeed
            architecture: x86_64
          network:
            macAddress: macAddress
            mgmtServerIp: mgmtServerIp
            name: name
            nics:
            - nodeName: nodeName
              controller: controller
              creationTime: 2000-01-23T04:56:07.000+00:00
              ipv6Address: 2001:db8:0:85a3::ac1f:8001
              ipAddress: 0.0.0.0
              networkName: networkName
              deletionTime: 2000-01-23T04:56:07.000+00:00
              bondingMaster: bondingMaster
              type: public
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              network: network
              node: node
              macAddress: 00:00:00:00:00:00
              modificationTime: 2000-01-23T04:56:07.000+00:00
              managed: true
              bondingMode: bondingMode
              controllerName: controllerName
              name: name
              etag: etag
              links:
                links: http://example.com/aeiou
              attributes:
                attributes: {}
              id: 1
              interfaceName: interfaceName
            - nodeName: nodeName
              controller: controller
              creationTime: 2000-01-23T04:56:07.000+00:00
              ipv6Address: 2001:db8:0:85a3::ac1f:8001
              ipAddress: 0.0.0.0
              networkName: networkName
              deletionTime: 2000-01-23T04:56:07.000+00:00
              bondingMaster: bondingMaster
              type: public
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              network: network
              node: node
              macAddress: 00:00:00:00:00:00
              modificationTime: 2000-01-23T04:56:07.000+00:00
              managed: true
              bondingMode: bondingMode
              controllerName: controllerName
              name: name
              etag: etag
              links:
                links: http://example.com/aeiou
              attributes:
                attributes: {}
              id: 1
              interfaceName: interfaceName
            ipAddress: ipAddress
            subnetMask: subnetMask
            defaultGateway: default
          internalName: internalName
          bootOrder: 1
          modificationTime: 2000-01-23T04:56:07.000+00:00
          managed: true
          rootFs: rootFs
          links:
            links: http://example.com/aeiou
          id: 6
          image:
            cloningDate: 2000-01-23T04:56:07.000+00:00
            kernel: kernel
            name: name
            cloningBlockDevice: cloningBlockDevice
          controller:
            macAddress: 00:00:00:00:00:00
            protocol: default
            password: password
            ipAddress: 0.0.0.0
            channel: 5
            type: none
            username: admin
          monitoring: NATIVE
          management:
            cardMacAddress: 00:00:00:00:00:00
            protocol: default
            password: password
            cardIpAddress: 0.0.0.0
            cardType: none
            channel: 5
            username: admin
          templateName: templateName
          nodeController: nodeController
          biosBootMode: AUTO
          name: name
          etag: etag
          location:
            tray: 9
            node: 3
            rack: 2
            controller: 2
            chassis: 7
          attributes:
            attributes: {}
          iscsiRoot: iscsiRoot
        - operationalStatus: 4
          aliases:
            aliases: aliases
          creationTime: 2000-01-23T04:56:07.000+00:00
          imagePending: true
          administrativeStatus: 7
          deletionTime: 2000-01-23T04:56:07.000+00:00
          type: type
          inventory: {}
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          imageTransport: imageTransport
          rootSlot: 1
          platform:
            name: generic
            vendorsArgs: vendorsArgs
            serialPort: serialPort
            serialPortSpeed: serialPortSpeed
            architecture: x86_64
          network:
            macAddress: macAddress
            mgmtServerIp: mgmtServerIp
            name: name
            nics:
            - nodeName: nodeName
              controller: controller
              creationTime: 2000-01-23T04:56:07.000+00:00
              ipv6Address: 2001:db8:0:85a3::ac1f:8001
              ipAddress: 0.0.0.0
              networkName: networkName
              deletionTime: 2000-01-23T04:56:07.000+00:00
              bondingMaster: bondingMaster
              type: public
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              network: network
              node: node
              macAddress: 00:00:00:00:00:00
              modificationTime: 2000-01-23T04:56:07.000+00:00
              managed: true
              bondingMode: bondingMode
              controllerName: controllerName
              name: name
              etag: etag
              links:
                links: http://example.com/aeiou
              attributes:
                attributes: {}
              id: 1
              interfaceName: interfaceName
            - nodeName: nodeName
              controller: controller
              creationTime: 2000-01-23T04:56:07.000+00:00
              ipv6Address: 2001:db8:0:85a3::ac1f:8001
              ipAddress: 0.0.0.0
              networkName: networkName
              deletionTime: 2000-01-23T04:56:07.000+00:00
              bondingMaster: bondingMaster
              type: public
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              network: network
              node: node
              macAddress: 00:00:00:00:00:00
              modificationTime: 2000-01-23T04:56:07.000+00:00
              managed: true
              bondingMode: bondingMode
              controllerName: controllerName
              name: name
              etag: etag
              links:
                links: http://example.com/aeiou
              attributes:
                attributes: {}
              id: 1
              interfaceName: interfaceName
            ipAddress: ipAddress
            subnetMask: subnetMask
            defaultGateway: default
          internalName: internalName
          bootOrder: 1
          modificationTime: 2000-01-23T04:56:07.000+00:00
          managed: true
          rootFs: rootFs
          links:
            links: http://example.com/aeiou
          id: 6
          image:
            cloningDate: 2000-01-23T04:56:07.000+00:00
            kernel: kernel
            name: name
            cloningBlockDevice: cloningBlockDevice
          controller:
            macAddress: 00:00:00:00:00:00
            protocol: default
            password: password
            ipAddress: 0.0.0.0
            channel: 5
            type: none
            username: admin
          monitoring: NATIVE
          management:
            cardMacAddress: 00:00:00:00:00:00
            protocol: default
            password: password
            cardIpAddress: 0.0.0.0
            cardType: none
            channel: 5
            username: admin
          templateName: templateName
          nodeController: nodeController
          biosBootMode: AUTO
          name: name
          etag: etag
          location:
            tray: 9
            node: 3
            rack: 2
            controller: 2
            chassis: 7
          attributes:
            attributes: {}
          iscsiRoot: iscsiRoot
        creationTime: 2000-01-23T04:56:07.000+00:00
        modificationTime: 2000-01-23T04:56:07.000+00:00
        name: name
        etag: etag
        deletionTime: 2000-01-23T04:56:07.000+00:00
        links:
          links: http://example.com/aeiou
        attributes:
          attributes: {}
        id: 0
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    EventHook:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        etag:
          type: string
          readOnly: true
        creationTime:
          type: string
          format: date-time
          readOnly: true
        modificationTime:
          type: string
          format: date-time
          readOnly: true
        deletionTime:
          type: string
          format: date-time
          readOnly: true
        links:
          type: object
          additionalProperties:
            type: string
            format: uri
            readOnly: true
          readOnly: true
        host:
          type: string
        port:
          type: integer
          format: int32
        eventTypes:
          uniqueItems: true
          type: array
          items:
            type: string
        aggregateMs:
          type: integer
          format: int32
        attributes:
          type: object
          additionalProperties:
            type: object
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        deletionTime: 2000-01-23T04:56:07.000+00:00
        eventTypes:
        - eventTypes
        - eventTypes
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        aggregateMs: 1
        port: 6
        modificationTime: 2000-01-23T04:56:07.000+00:00
        name: name
        host: host
        etag: etag
        links:
          links: http://example.com/aeiou
        attributes:
          attributes: {}
        id: 0
    Event:
      type: object
      properties:
        time:
          type: string
          format: date-time
        type:
          type: string
        message:
          type: string
        parentEvent:
          $ref: '#/components/schemas/Event'
      example:
        parentEvent: null
        time: 2000-01-23T04:56:07.000+00:00
        type: type
        message: message
    ApplicationDescriptionDTO:
      type: object
      properties:
        entryPoints:
          type: object
          additionalProperties:
            type: string
            format: uri
      example:
        entryPoints:
          entryPoints: http://example.com/aeiou
    PropertieDTO:
      type: object
      properties:
        default:
          type: string
        definition:
          type: string
        value:
          type: string
      example:
        default: default
        definition: definition
        value: value
    ImageGroup:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        etag:
          type: string
          readOnly: true
        creationTime:
          type: string
          format: date-time
          readOnly: true
        modificationTime:
          type: string
          format: date-time
          readOnly: true
        deletionTime:
          type: string
          format: date-time
          readOnly: true
        links:
          type: object
          additionalProperties:
            type: string
            format: uri
            readOnly: true
          readOnly: true
        nodes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Node'
        type:
          type: string
          enum:
          - undefined
          - generic
          - physical
          - autoinstall
        architecture:
          type: string
        baseOsName:
          type: string
        baseOsVersion:
          type: string
        path:
          type: string
        captureImageDevice:
          type: string
        captureImageDate:
          type: string
          format: date-time
        kernels:
          uniqueItems: true
          type: array
          items:
            type: string
        target:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: object
      example:
        baseOsVersion: baseOsVersion
        creationTime: 2000-01-23T04:56:07.000+00:00
        deletionTime: 2000-01-23T04:56:07.000+00:00
        captureImageDate: 2000-01-23T04:56:07.000+00:00
        type: undefined
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        target: target
        baseOsName: baseOsName
        path: path
        captureImageDevice: captureImageDevice
        nodes:
        - operationalStatus: 4
          aliases:
            aliases: aliases
          creationTime: 2000-01-23T04:56:07.000+00:00
          imagePending: true
          administrativeStatus: 7
          deletionTime: 2000-01-23T04:56:07.000+00:00
          type: type
          inventory: {}
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          imageTransport: imageTransport
          rootSlot: 1
          platform:
            name: generic
            vendorsArgs: vendorsArgs
            serialPort: serialPort
            serialPortSpeed: serialPortSpeed
            architecture: x86_64
          network:
            macAddress: macAddress
            mgmtServerIp: mgmtServerIp
            name: name
            nics:
            - nodeName: nodeName
              controller: controller
              creationTime: 2000-01-23T04:56:07.000+00:00
              ipv6Address: 2001:db8:0:85a3::ac1f:8001
              ipAddress: 0.0.0.0
              networkName: networkName
              deletionTime: 2000-01-23T04:56:07.000+00:00
              bondingMaster: bondingMaster
              type: public
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              network: network
              node: node
              macAddress: 00:00:00:00:00:00
              modificationTime: 2000-01-23T04:56:07.000+00:00
              managed: true
              bondingMode: bondingMode
              controllerName: controllerName
              name: name
              etag: etag
              links:
                links: http://example.com/aeiou
              attributes:
                attributes: {}
              id: 1
              interfaceName: interfaceName
            - nodeName: nodeName
              controller: controller
              creationTime: 2000-01-23T04:56:07.000+00:00
              ipv6Address: 2001:db8:0:85a3::ac1f:8001
              ipAddress: 0.0.0.0
              networkName: networkName
              deletionTime: 2000-01-23T04:56:07.000+00:00
              bondingMaster: bondingMaster
              type: public
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              network: network
              node: node
              macAddress: 00:00:00:00:00:00
              modificationTime: 2000-01-23T04:56:07.000+00:00
              managed: true
              bondingMode: bondingMode
              controllerName: controllerName
              name: name
              etag: etag
              links:
                links: http://example.com/aeiou
              attributes:
                attributes: {}
              id: 1
              interfaceName: interfaceName
            ipAddress: ipAddress
            subnetMask: subnetMask
            defaultGateway: default
          internalName: internalName
          bootOrder: 1
          modificationTime: 2000-01-23T04:56:07.000+00:00
          managed: true
          rootFs: rootFs
          links:
            links: http://example.com/aeiou
          id: 6
          image:
            cloningDate: 2000-01-23T04:56:07.000+00:00
            kernel: kernel
            name: name
            cloningBlockDevice: cloningBlockDevice
          controller:
            macAddress: 00:00:00:00:00:00
            protocol: default
            password: password
            ipAddress: 0.0.0.0
            channel: 5
            type: none
            username: admin
          monitoring: NATIVE
          management:
            cardMacAddress: 00:00:00:00:00:00
            protocol: default
            password: password
            cardIpAddress: 0.0.0.0
            cardType: none
            channel: 5
            username: admin
          templateName: templateName
          nodeController: nodeController
          biosBootMode: AUTO
          name: name
          etag: etag
          location:
            tray: 9
            node: 3
            rack: 2
            controller: 2
            chassis: 7
          attributes:
            attributes: {}
          iscsiRoot: iscsiRoot
        - operationalStatus: 4
          aliases:
            aliases: aliases
          creationTime: 2000-01-23T04:56:07.000+00:00
          imagePending: true
          administrativeStatus: 7
          deletionTime: 2000-01-23T04:56:07.000+00:00
          type: type
          inventory: {}
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          imageTransport: imageTransport
          rootSlot: 1
          platform:
            name: generic
            vendorsArgs: vendorsArgs
            serialPort: serialPort
            serialPortSpeed: serialPortSpeed
            architecture: x86_64
          network:
            macAddress: macAddress
            mgmtServerIp: mgmtServerIp
            name: name
            nics:
            - nodeName: nodeName
              controller: controller
              creationTime: 2000-01-23T04:56:07.000+00:00
              ipv6Address: 2001:db8:0:85a3::ac1f:8001
              ipAddress: 0.0.0.0
              networkName: networkName
              deletionTime: 2000-01-23T04:56:07.000+00:00
              bondingMaster: bondingMaster
              type: public
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              network: network
              node: node
              macAddress: 00:00:00:00:00:00
              modificationTime: 2000-01-23T04:56:07.000+00:00
              managed: true
              bondingMode: bondingMode
              controllerName: controllerName
              name: name
              etag: etag
              links:
                links: http://example.com/aeiou
              attributes:
                attributes: {}
              id: 1
              interfaceName: interfaceName
            - nodeName: nodeName
              controller: controller
              creationTime: 2000-01-23T04:56:07.000+00:00
              ipv6Address: 2001:db8:0:85a3::ac1f:8001
              ipAddress: 0.0.0.0
              networkName: networkName
              deletionTime: 2000-01-23T04:56:07.000+00:00
              bondingMaster: bondingMaster
              type: public
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              network: network
              node: node
              macAddress: 00:00:00:00:00:00
              modificationTime: 2000-01-23T04:56:07.000+00:00
              managed: true
              bondingMode: bondingMode
              controllerName: controllerName
              name: name
              etag: etag
              links:
                links: http://example.com/aeiou
              attributes:
                attributes: {}
              id: 1
              interfaceName: interfaceName
            ipAddress: ipAddress
            subnetMask: subnetMask
            defaultGateway: default
          internalName: internalName
          bootOrder: 1
          modificationTime: 2000-01-23T04:56:07.000+00:00
          managed: true
          rootFs: rootFs
          links:
            links: http://example.com/aeiou
          id: 6
          image:
            cloningDate: 2000-01-23T04:56:07.000+00:00
            kernel: kernel
            name: name
            cloningBlockDevice: cloningBlockDevice
          controller:
            macAddress: 00:00:00:00:00:00
            protocol: default
            password: password
            ipAddress: 0.0.0.0
            channel: 5
            type: none
            username: admin
          monitoring: NATIVE
          management:
            cardMacAddress: 00:00:00:00:00:00
            protocol: default
            password: password
            cardIpAddress: 0.0.0.0
            cardType: none
            channel: 5
            username: admin
          templateName: templateName
          nodeController: nodeController
          biosBootMode: AUTO
          name: name
          etag: etag
          location:
            tray: 9
            node: 3
            rack: 2
            controller: 2
            chassis: 7
          attributes:
            attributes: {}
          iscsiRoot: iscsiRoot
        modificationTime: 2000-01-23T04:56:07.000+00:00
        name: name
        kernels:
        - kernels
        - kernels
        etag: etag
        links:
          links: http://example.com/aeiou
        attributes:
          attributes: {}
        id: 0
        architecture: architecture
    ManagementCard:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        etag:
          type: string
          readOnly: true
        creationTime:
          type: string
          format: date-time
          readOnly: true
        modificationTime:
          type: string
          format: date-time
          readOnly: true
        deletionTime:
          type: string
          format: date-time
          readOnly: true
        links:
          type: object
          additionalProperties:
            type: string
            format: uri
            readOnly: true
          readOnly: true
        scannable:
          type: boolean
        attributes:
          type: object
          additionalProperties:
            type: object
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        scannable: true
        modificationTime: 2000-01-23T04:56:07.000+00:00
        name: name
        etag: etag
        deletionTime: 2000-01-23T04:56:07.000+00:00
        links:
          links: http://example.com/aeiou
        attributes:
          attributes: {}
        id: 0
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    Metric:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        etag:
          type: string
          readOnly: true
        creationTime:
          type: string
          format: date-time
          readOnly: true
        modificationTime:
          type: string
          format: date-time
          readOnly: true
        deletionTime:
          type: string
          format: date-time
          readOnly: true
        links:
          type: object
          additionalProperties:
            type: string
            format: uri
            readOnly: true
          readOnly: true
        type:
          type: string
          enum:
          - unknown
          - integer
          - real
          - string
          - percent
          - numerical
        timeMultiple:
          type: integer
          format: int32
        message:
          type: string
        defaultMaxValue:
          type: number
          format: float
        unit:
          type: string
        command:
          type: string
        status:
          type: string
          enum:
          - OK
          - Too long to perform
          - Inactive action
          - Not representative
          - Undefined
        numeric:
          type: boolean
        extended:
          type: boolean
        attributes:
          type: object
          additionalProperties:
            type: object
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        numeric: true
        deletionTime: 2000-01-23T04:56:07.000+00:00
        defaultMaxValue: 1.4658129
        type: unknown
        message: message
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        command: command
        extended: true
        unit: unit
        modificationTime: 2000-01-23T04:56:07.000+00:00
        name: name
        timeMultiple: 6
        etag: etag
        links:
          links: http://example.com/aeiou
        attributes:
          attributes: {}
        id: 0
        status: OK
    NetworkGroup:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        etag:
          type: string
          readOnly: true
        creationTime:
          type: string
          format: date-time
          readOnly: true
        modificationTime:
          type: string
          format: date-time
          readOnly: true
        deletionTime:
          type: string
          format: date-time
          readOnly: true
        links:
          type: object
          additionalProperties:
            type: string
            format: uri
            readOnly: true
          readOnly: true
        nodes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Node'
        attributes:
          type: object
          additionalProperties:
            type: object
      example:
        nodes:
        - operationalStatus: 4
          aliases:
            aliases: aliases
          creationTime: 2000-01-23T04:56:07.000+00:00
          imagePending: true
          administrativeStatus: 7
          deletionTime: 2000-01-23T04:56:07.000+00:00
          type: type
          inventory: {}
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          imageTransport: imageTransport
          rootSlot: 1
          platform:
            name: generic
            vendorsArgs: vendorsArgs
            serialPort: serialPort
            serialPortSpeed: serialPortSpeed
            architecture: x86_64
          network:
            macAddress: macAddress
            mgmtServerIp: mgmtServerIp
            name: name
            nics:
            - nodeName: nodeName
              controller: controller
              creationTime: 2000-01-23T04:56:07.000+00:00
              ipv6Address: 2001:db8:0:85a3::ac1f:8001
              ipAddress: 0.0.0.0
              networkName: networkName
              deletionTime: 2000-01-23T04:56:07.000+00:00
              bondingMaster: bondingMaster
              type: public
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              network: network
              node: node
              macAddress: 00:00:00:00:00:00
              modificationTime: 2000-01-23T04:56:07.000+00:00
              managed: true
              bondingMode: bondingMode
              controllerName: controllerName
              name: name
              etag: etag
              links:
                links: http://example.com/aeiou
              attributes:
                attributes: {}
              id: 1
              interfaceName: interfaceName
            - nodeName: nodeName
              controller: controller
              creationTime: 2000-01-23T04:56:07.000+00:00
              ipv6Address: 2001:db8:0:85a3::ac1f:8001
              ipAddress: 0.0.0.0
              networkName: networkName
              deletionTime: 2000-01-23T04:56:07.000+00:00
              bondingMaster: bondingMaster
              type: public
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              network: network
              node: node
              macAddress: 00:00:00:00:00:00
              modificationTime: 2000-01-23T04:56:07.000+00:00
              managed: true
              bondingMode: bondingMode
              controllerName: controllerName
              name: name
              etag: etag
              links:
                links: http://example.com/aeiou
              attributes:
                attributes: {}
              id: 1
              interfaceName: interfaceName
            ipAddress: ipAddress
            subnetMask: subnetMask
            defaultGateway: default
          internalName: internalName
          bootOrder: 1
          modificationTime: 2000-01-23T04:56:07.000+00:00
          managed: true
          rootFs: rootFs
          links:
            links: http://example.com/aeiou
          id: 6
          image:
            cloningDate: 2000-01-23T04:56:07.000+00:00
            kernel: kernel
            name: name
            cloningBlockDevice: cloningBlockDevice
          controller:
            macAddress: 00:00:00:00:00:00
            protocol: default
            password: password
            ipAddress: 0.0.0.0
            channel: 5
            type: none
            username: admin
          monitoring: NATIVE
          management:
            cardMacAddress: 00:00:00:00:00:00
            protocol: default
            password: password
            cardIpAddress: 0.0.0.0
            cardType: none
            channel: 5
            username: admin
          templateName: templateName
          nodeController: nodeController
          biosBootMode: AUTO
          name: name
          etag: etag
          location:
            tray: 9
            node: 3
            rack: 2
            controller: 2
            chassis: 7
          attributes:
            attributes: {}
          iscsiRoot: iscsiRoot
        - operationalStatus: 4
          aliases:
            aliases: aliases
          creationTime: 2000-01-23T04:56:07.000+00:00
          imagePending: true
          administrativeStatus: 7
          deletionTime: 2000-01-23T04:56:07.000+00:00
          type: type
          inventory: {}
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          imageTransport: imageTransport
          rootSlot: 1
          platform:
            name: generic
            vendorsArgs: vendorsArgs
            serialPort: serialPort
            serialPortSpeed: serialPortSpeed
            architecture: x86_64
          network:
            macAddress: macAddress
            mgmtServerIp: mgmtServerIp
            name: name
            nics:
            - nodeName: nodeName
              controller: controller
              creationTime: 2000-01-23T04:56:07.000+00:00
              ipv6Address: 2001:db8:0:85a3::ac1f:8001
              ipAddress: 0.0.0.0
              networkName: networkName
              deletionTime: 2000-01-23T04:56:07.000+00:00
              bondingMaster: bondingMaster
              type: public
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              network: network
              node: node
              macAddress: 00:00:00:00:00:00
              modificationTime: 2000-01-23T04:56:07.000+00:00
              managed: true
              bondingMode: bondingMode
              controllerName: controllerName
              name: name
              etag: etag
              links:
                links: http://example.com/aeiou
              attributes:
                attributes: {}
              id: 1
              interfaceName: interfaceName
            - nodeName: nodeName
              controller: controller
              creationTime: 2000-01-23T04:56:07.000+00:00
              ipv6Address: 2001:db8:0:85a3::ac1f:8001
              ipAddress: 0.0.0.0
              networkName: networkName
              deletionTime: 2000-01-23T04:56:07.000+00:00
              bondingMaster: bondingMaster
              type: public
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              network: network
              node: node
              macAddress: 00:00:00:00:00:00
              modificationTime: 2000-01-23T04:56:07.000+00:00
              managed: true
              bondingMode: bondingMode
              controllerName: controllerName
              name: name
              etag: etag
              links:
                links: http://example.com/aeiou
              attributes:
                attributes: {}
              id: 1
              interfaceName: interfaceName
            ipAddress: ipAddress
            subnetMask: subnetMask
            defaultGateway: default
          internalName: internalName
          bootOrder: 1
          modificationTime: 2000-01-23T04:56:07.000+00:00
          managed: true
          rootFs: rootFs
          links:
            links: http://example.com/aeiou
          id: 6
          image:
            cloningDate: 2000-01-23T04:56:07.000+00:00
            kernel: kernel
            name: name
            cloningBlockDevice: cloningBlockDevice
          controller:
            macAddress: 00:00:00:00:00:00
            protocol: default
            password: password
            ipAddress: 0.0.0.0
            channel: 5
            type: none
            username: admin
          monitoring: NATIVE
          management:
            cardMacAddress: 00:00:00:00:00:00
            protocol: default
            password: password
            cardIpAddress: 0.0.0.0
            cardType: none
            channel: 5
            username: admin
          templateName: templateName
          nodeController: nodeController
          biosBootMode: AUTO
          name: name
          etag: etag
          location:
            tray: 9
            node: 3
            rack: 2
            controller: 2
            chassis: 7
          attributes:
            attributes: {}
          iscsiRoot: iscsiRoot
        creationTime: 2000-01-23T04:56:07.000+00:00
        modificationTime: 2000-01-23T04:56:07.000+00:00
        name: name
        etag: etag
        deletionTime: 2000-01-23T04:56:07.000+00:00
        links:
          links: http://example.com/aeiou
        attributes:
          attributes: {}
        id: 0
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    Network:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        etag:
          type: string
          readOnly: true
        creationTime:
          type: string
          format: date-time
          readOnly: true
        modificationTime:
          type: string
          format: date-time
          readOnly: true
        deletionTime:
          type: string
          format: date-time
          readOnly: true
        links:
          type: object
          additionalProperties:
            type: string
            format: uri
            readOnly: true
          readOnly: true
        baseIp:
          type: string
          example: 0.0.0.0
        broadcast:
          type: string
          example: 0.0.0.0
        gateway:
          type: string
          example: 0.0.0.0
        type:
          type: string
          example: public
        vlan:
          type: integer
          format: int32
        netmask:
          type: string
          example: 0.0.0.0
        rackNetmask:
          type: string
          example: 0.0.0.0
        mgmtServerIp:
          type: string
          example: default
        mtu:
          type: integer
          format: int32
        rack:
          type: integer
          format: int32
        nics:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Nic'
        attributes:
          type: object
          additionalProperties:
            type: object
      example:
        broadcast: 0.0.0.0
        rack: 5
        creationTime: 2000-01-23T04:56:07.000+00:00
        rackNetmask: 0.0.0.0
        deletionTime: 2000-01-23T04:56:07.000+00:00
        type: public
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        mtu: 1
        vlan: 6
        netmask: 0.0.0.0
        modificationTime: 2000-01-23T04:56:07.000+00:00
        mgmtServerIp: default
        name: name
        nics:
        - nodeName: nodeName
          controller: controller
          creationTime: 2000-01-23T04:56:07.000+00:00
          ipv6Address: 2001:db8:0:85a3::ac1f:8001
          ipAddress: 0.0.0.0
          networkName: networkName
          deletionTime: 2000-01-23T04:56:07.000+00:00
          bondingMaster: bondingMaster
          type: public
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          network: network
          node: node
          macAddress: 00:00:00:00:00:00
          modificationTime: 2000-01-23T04:56:07.000+00:00
          managed: true
          bondingMode: bondingMode
          controllerName: controllerName
          name: name
          etag: etag
          links:
            links: http://example.com/aeiou
          attributes:
            attributes: {}
          id: 1
          interfaceName: interfaceName
        - nodeName: nodeName
          controller: controller
          creationTime: 2000-01-23T04:56:07.000+00:00
          ipv6Address: 2001:db8:0:85a3::ac1f:8001
          ipAddress: 0.0.0.0
          networkName: networkName
          deletionTime: 2000-01-23T04:56:07.000+00:00
          bondingMaster: bondingMaster
          type: public
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          network: network
          node: node
          macAddress: 00:00:00:00:00:00
          modificationTime: 2000-01-23T04:56:07.000+00:00
          managed: true
          bondingMode: bondingMode
          controllerName: controllerName
          name: name
          etag: etag
          links:
            links: http://example.com/aeiou
          attributes:
            attributes: {}
          id: 1
          interfaceName: interfaceName
        etag: etag
        links:
          links: http://example.com/aeiou
        attributes:
          attributes: {}
        id: 0
        gateway: 0.0.0.0
        baseIp: 0.0.0.0
    NicTemplate:
      required:
      - network
      type: object
      properties:
        network:
          type: string
        bondingMaster:
          type: string
        bondingMode:
          type: string
        bridge:
          type: string
        interfaces:
          uniqueItems: true
          type: array
          items:
            type: string
      example:
        interfaces:
        - interfaces
        - interfaces
        bondingMode: bondingMode
        bondingMaster: bondingMaster
        bridge: bridge
        network: network
    NodeTemplate:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        etag:
          type: string
          readOnly: true
        creationTime:
          type: string
          format: date-time
          readOnly: true
        modificationTime:
          type: string
          format: date-time
          readOnly: true
        deletionTime:
          type: string
          format: date-time
          readOnly: true
        links:
          type: object
          additionalProperties:
            type: string
            format: uri
            readOnly: true
          readOnly: true
        nicTemplates:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NicTemplate'
        attributes:
          type: object
          additionalProperties:
            type: object
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        modificationTime: 2000-01-23T04:56:07.000+00:00
        name: name
        etag: etag
        deletionTime: 2000-01-23T04:56:07.000+00:00
        links:
          links: http://example.com/aeiou
        attributes:
          attributes: {}
        id: 0
        nicTemplates:
        - interfaces:
          - interfaces
          - interfaces
          bondingMode: bondingMode
          bondingMaster: bondingMaster
          bridge: bridge
          network: network
        - interfaces:
          - interfaces
          - interfaces
          bondingMode: bondingMode
          bondingMaster: bondingMaster
          bridge: bridge
          network: network
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    Action:
      type: object
      properties:
        resources:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Actionable'
        parameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ActionParameterObject'
      example:
        resources:
        - ""
        - ""
        parameters:
          parameters:
            name: name
            value: {}
            required: true
    ActionParameterObject:
      type: object
      properties:
        name:
          type: string
        required:
          type: boolean
        value:
          type: object
      example:
        name: name
        value: {}
        required: true
    Actionable:
      type: object
    Task:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        etag:
          type: string
          readOnly: true
        creationTime:
          type: string
          format: date-time
          readOnly: true
        modificationTime:
          type: string
          format: date-time
          readOnly: true
        deletionTime:
          type: string
          format: date-time
          readOnly: true
        links:
          type: object
          additionalProperties:
            type: string
            format: uri
            readOnly: true
          readOnly: true
        status:
          type: string
          enum:
          - PENDING
          - RUNNING
          - SUCCEEDED
          - ERROR
          - CANCELLED
        startingTimestamp:
          type: integer
          format: int64
        completionTimestamp:
          type: integer
          format: int64
        updates:
          type: array
          items:
            $ref: '#/components/schemas/Update'
        attributes:
          type: object
          additionalProperties:
            type: object
      example:
        startingTimestamp: 6
        creationTime: 2000-01-23T04:56:07.000+00:00
        deletionTime: 2000-01-23T04:56:07.000+00:00
        updates:
        - level: level
          message: message
          timestamp: 5
        - level: level
          message: message
          timestamp: 5
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        completionTimestamp: 1
        modificationTime: 2000-01-23T04:56:07.000+00:00
        name: name
        etag: etag
        links:
          links: http://example.com/aeiou
        attributes:
          attributes: {}
        id: 0
        status: PENDING
    Update:
      type: object
      properties:
        timestamp:
          type: integer
          format: int64
        level:
          type: string
        message:
          type: string
      example:
        level: level
        message: message
        timestamp: 5
    LoginPasswordDTO:
      required:
      - login
      type: object
      properties:
        login:
          type: string
          example: user
        password:
          type: string
          example: password
        role:
          $ref: '#/components/schemas/Role'
        validity:
          type: string
          format: date-time
    Role:
      type: object
      properties:
        permissions:
          type: array
          items:
            type: string
            enum:
            - NONE
            - DENIED
            - HOME_GET
            - SETTING_GET
            - CONTROLLER_GET
            - CONTROLLER_ADD
            - CONTROLLER_MODIFY
            - CONTROLLER_DELETE
            - NODE_GET
            - NODE_ADD
            - NODE_MODIFY
            - NODE_DELETE
            - NODE_POWER_ACTION
            - SYSTEM_GROUP_GET
            - SYSTEM_GROUP_ADD
            - SYSTEM_GROUP_MODIFY
            - SYSTEM_GROUP_DELETE
            - NETWORK_GET
            - NETWORK_ADD
            - NETWORK_MODIFY
            - NETWORK_DELETE
            - NIC_GET
            - NIC_ADD
            - NIC_MODIFY
            - NIC_DELETE
            - NETWORK_GROUP_GET
            - NETWORK_GROUP_ADD
            - NETWORK_GROUP_MODIFY
            - NETWORK_GROUP_DELETE
            - IMAGE_GROUP_GET
            - IMAGE_GROUP_ADD
            - IMAGE_GROUP_MODIFY
            - IMAGE_GROUP_DELETE
            - IMAGE_GROUP_MAKE_NODE_ACTIVE
            - IMAGE_GROUP_CAPTURE_IMAGE
            - IMAGE_GROUP_DEPLOY_IMAGE
            - CUSTOM_GROUP_GET
            - CUSTOM_GROUP_ADD
            - CUSTOM_GROUP_MODIFY
            - CUSTOM_GROUP_DELETE
            - MANAGEMENT_CARD_GET
            - ARCHITECTURE_GET
            - METRIC_GET
            - ALERT_GET
            - TEMPLATE_GET
            - TEMPLATE_ADD
            - TEMPLATE_MODIFY
            - TEMPLATE_DELETE
            - SESSION_GET
            - SESSION_LOGIN
            - SESSION_LOGOUT
            - SESSION_CREATE
            - SESSION_DELETE
            - EVENT_GET
            - EVENT_HOOK_GET
            - EVENT_HOOK_ADD
            - EVENT_HOOK_MODIFY
            - EVENT_HOOK_DELETE
            - TASK_GET
            - TASK_MODIFY
            - TASK_DELETE
            - ADMINISTRATION
            - GUI
      example: AUTHENTICATED_ROLE
    SystemGroup:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        etag:
          type: string
          readOnly: true
        creationTime:
          type: string
          format: date-time
          readOnly: true
        modificationTime:
          type: string
          format: date-time
          readOnly: true
        deletionTime:
          type: string
          format: date-time
          readOnly: true
        links:
          type: object
          additionalProperties:
            type: string
            format: uri
            readOnly: true
          readOnly: true
        nodes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Node'
        attributes:
          type: object
          additionalProperties:
            type: object
      example:
        nodes:
        - operationalStatus: 4
          aliases:
            aliases: aliases
          creationTime: 2000-01-23T04:56:07.000+00:00
          imagePending: true
          administrativeStatus: 7
          deletionTime: 2000-01-23T04:56:07.000+00:00
          type: type
          inventory: {}
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          imageTransport: imageTransport
          rootSlot: 1
          platform:
            name: generic
            vendorsArgs: vendorsArgs
            serialPort: serialPort
            serialPortSpeed: serialPortSpeed
            architecture: x86_64
          network:
            macAddress: macAddress
            mgmtServerIp: mgmtServerIp
            name: name
            nics:
            - nodeName: nodeName
              controller: controller
              creationTime: 2000-01-23T04:56:07.000+00:00
              ipv6Address: 2001:db8:0:85a3::ac1f:8001
              ipAddress: 0.0.0.0
              networkName: networkName
              deletionTime: 2000-01-23T04:56:07.000+00:00
              bondingMaster: bondingMaster
              type: public
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              network: network
              node: node
              macAddress: 00:00:00:00:00:00
              modificationTime: 2000-01-23T04:56:07.000+00:00
              managed: true
              bondingMode: bondingMode
              controllerName: controllerName
              name: name
              etag: etag
              links:
                links: http://example.com/aeiou
              attributes:
                attributes: {}
              id: 1
              interfaceName: interfaceName
            - nodeName: nodeName
              controller: controller
              creationTime: 2000-01-23T04:56:07.000+00:00
              ipv6Address: 2001:db8:0:85a3::ac1f:8001
              ipAddress: 0.0.0.0
              networkName: networkName
              deletionTime: 2000-01-23T04:56:07.000+00:00
              bondingMaster: bondingMaster
              type: public
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              network: network
              node: node
              macAddress: 00:00:00:00:00:00
              modificationTime: 2000-01-23T04:56:07.000+00:00
              managed: true
              bondingMode: bondingMode
              controllerName: controllerName
              name: name
              etag: etag
              links:
                links: http://example.com/aeiou
              attributes:
                attributes: {}
              id: 1
              interfaceName: interfaceName
            ipAddress: ipAddress
            subnetMask: subnetMask
            defaultGateway: default
          internalName: internalName
          bootOrder: 1
          modificationTime: 2000-01-23T04:56:07.000+00:00
          managed: true
          rootFs: rootFs
          links:
            links: http://example.com/aeiou
          id: 6
          image:
            cloningDate: 2000-01-23T04:56:07.000+00:00
            kernel: kernel
            name: name
            cloningBlockDevice: cloningBlockDevice
          controller:
            macAddress: 00:00:00:00:00:00
            protocol: default
            password: password
            ipAddress: 0.0.0.0
            channel: 5
            type: none
            username: admin
          monitoring: NATIVE
          management:
            cardMacAddress: 00:00:00:00:00:00
            protocol: default
            password: password
            cardIpAddress: 0.0.0.0
            cardType: none
            channel: 5
            username: admin
          templateName: templateName
          nodeController: nodeController
          biosBootMode: AUTO
          name: name
          etag: etag
          location:
            tray: 9
            node: 3
            rack: 2
            controller: 2
            chassis: 7
          attributes:
            attributes: {}
          iscsiRoot: iscsiRoot
        - operationalStatus: 4
          aliases:
            aliases: aliases
          creationTime: 2000-01-23T04:56:07.000+00:00
          imagePending: true
          administrativeStatus: 7
          deletionTime: 2000-01-23T04:56:07.000+00:00
          type: type
          inventory: {}
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          imageTransport: imageTransport
          rootSlot: 1
          platform:
            name: generic
            vendorsArgs: vendorsArgs
            serialPort: serialPort
            serialPortSpeed: serialPortSpeed
            architecture: x86_64
          network:
            macAddress: macAddress
            mgmtServerIp: mgmtServerIp
            name: name
            nics:
            - nodeName: nodeName
              controller: controller
              creationTime: 2000-01-23T04:56:07.000+00:00
              ipv6Address: 2001:db8:0:85a3::ac1f:8001
              ipAddress: 0.0.0.0
              networkName: networkName
              deletionTime: 2000-01-23T04:56:07.000+00:00
              bondingMaster: bondingMaster
              type: public
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              network: network
              node: node
              macAddress: 00:00:00:00:00:00
              modificationTime: 2000-01-23T04:56:07.000+00:00
              managed: true
              bondingMode: bondingMode
              controllerName: controllerName
              name: name
              etag: etag
              links:
                links: http://example.com/aeiou
              attributes:
                attributes: {}
              id: 1
              interfaceName: interfaceName
            - nodeName: nodeName
              controller: controller
              creationTime: 2000-01-23T04:56:07.000+00:00
              ipv6Address: 2001:db8:0:85a3::ac1f:8001
              ipAddress: 0.0.0.0
              networkName: networkName
              deletionTime: 2000-01-23T04:56:07.000+00:00
              bondingMaster: bondingMaster
              type: public
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              network: network
              node: node
              macAddress: 00:00:00:00:00:00
              modificationTime: 2000-01-23T04:56:07.000+00:00
              managed: true
              bondingMode: bondingMode
              controllerName: controllerName
              name: name
              etag: etag
              links:
                links: http://example.com/aeiou
              attributes:
                attributes: {}
              id: 1
              interfaceName: interfaceName
            ipAddress: ipAddress
            subnetMask: subnetMask
            defaultGateway: default
          internalName: internalName
          bootOrder: 1
          modificationTime: 2000-01-23T04:56:07.000+00:00
          managed: true
          rootFs: rootFs
          links:
            links: http://example.com/aeiou
          id: 6
          image:
            cloningDate: 2000-01-23T04:56:07.000+00:00
            kernel: kernel
            name: name
            cloningBlockDevice: cloningBlockDevice
          controller:
            macAddress: 00:00:00:00:00:00
            protocol: default
            password: password
            ipAddress: 0.0.0.0
            channel: 5
            type: none
            username: admin
          monitoring: NATIVE
          management:
            cardMacAddress: 00:00:00:00:00:00
            protocol: default
            password: password
            cardIpAddress: 0.0.0.0
            cardType: none
            channel: 5
            username: admin
          templateName: templateName
          nodeController: nodeController
          biosBootMode: AUTO
          name: name
          etag: etag
          location:
            tray: 9
            node: 3
            rack: 2
            controller: 2
            chassis: 7
          attributes:
            attributes: {}
          iscsiRoot: iscsiRoot
        creationTime: 2000-01-23T04:56:07.000+00:00
        modificationTime: 2000-01-23T04:56:07.000+00:00
        name: name
        etag: etag
        deletionTime: 2000-01-23T04:56:07.000+00:00
        links:
          links: http://example.com/aeiou
        attributes:
          attributes: {}
        id: 0
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
  securitySchemes:
    X-Auth-Token:
      type: apiKey
      name: X-Auth-Token
      in: header
