/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.7.1 (3.7)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// checks if the WritableVirtualDiskRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WritableVirtualDiskRequest{}

// WritableVirtualDiskRequest Adds support for custom fields and tags.
type WritableVirtualDiskRequest struct {
	VirtualMachine       int32                  `json:"virtual_machine"`
	Name                 string                 `json:"name"`
	Description          *string                `json:"description,omitempty"`
	Size                 int32                  `json:"size"`
	Tags                 []NestedTagRequest     `json:"tags,omitempty"`
	CustomFields         map[string]interface{} `json:"custom_fields,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WritableVirtualDiskRequest WritableVirtualDiskRequest

// NewWritableVirtualDiskRequest instantiates a new WritableVirtualDiskRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWritableVirtualDiskRequest(virtualMachine int32, name string, size int32) *WritableVirtualDiskRequest {
	this := WritableVirtualDiskRequest{}
	this.VirtualMachine = virtualMachine
	this.Name = name
	this.Size = size
	return &this
}

// NewWritableVirtualDiskRequestWithDefaults instantiates a new WritableVirtualDiskRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWritableVirtualDiskRequestWithDefaults() *WritableVirtualDiskRequest {
	this := WritableVirtualDiskRequest{}
	return &this
}

// GetVirtualMachine returns the VirtualMachine field value
func (o *WritableVirtualDiskRequest) GetVirtualMachine() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VirtualMachine
}

// GetVirtualMachineOk returns a tuple with the VirtualMachine field value
// and a boolean to check if the value has been set.
func (o *WritableVirtualDiskRequest) GetVirtualMachineOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VirtualMachine, true
}

// SetVirtualMachine sets field value
func (o *WritableVirtualDiskRequest) SetVirtualMachine(v int32) {
	o.VirtualMachine = v
}

// GetName returns the Name field value
func (o *WritableVirtualDiskRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WritableVirtualDiskRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WritableVirtualDiskRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WritableVirtualDiskRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableVirtualDiskRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *WritableVirtualDiskRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *WritableVirtualDiskRequest) SetDescription(v string) {
	o.Description = &v
}

// GetSize returns the Size field value
func (o *WritableVirtualDiskRequest) GetSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *WritableVirtualDiskRequest) GetSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *WritableVirtualDiskRequest) SetSize(v int32) {
	o.Size = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *WritableVirtualDiskRequest) GetTags() []NestedTagRequest {
	if o == nil || IsNil(o.Tags) {
		var ret []NestedTagRequest
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableVirtualDiskRequest) GetTagsOk() ([]NestedTagRequest, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *WritableVirtualDiskRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []NestedTagRequest and assigns it to the Tags field.
func (o *WritableVirtualDiskRequest) SetTags(v []NestedTagRequest) {
	o.Tags = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *WritableVirtualDiskRequest) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableVirtualDiskRequest) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *WritableVirtualDiskRequest) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *WritableVirtualDiskRequest) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o WritableVirtualDiskRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WritableVirtualDiskRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["virtual_machine"] = o.VirtualMachine
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["size"] = o.Size
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WritableVirtualDiskRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"virtual_machine",
		"name",
		"size",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWritableVirtualDiskRequest := _WritableVirtualDiskRequest{}

	err = json.Unmarshal(data, &varWritableVirtualDiskRequest)

	if err != nil {
		return err
	}

	*o = WritableVirtualDiskRequest(varWritableVirtualDiskRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "virtual_machine")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "size")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "custom_fields")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWritableVirtualDiskRequest struct {
	value *WritableVirtualDiskRequest
	isSet bool
}

func (v NullableWritableVirtualDiskRequest) Get() *WritableVirtualDiskRequest {
	return v.value
}

func (v *NullableWritableVirtualDiskRequest) Set(val *WritableVirtualDiskRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWritableVirtualDiskRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWritableVirtualDiskRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWritableVirtualDiskRequest(val *WritableVirtualDiskRequest) *NullableWritableVirtualDiskRequest {
	return &NullableWritableVirtualDiskRequest{value: val, isSet: true}
}

func (v NullableWritableVirtualDiskRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWritableVirtualDiskRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
