/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.7.1 (3.7)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
)

// checks if the PatchedWritableFHRPGroupAssignmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedWritableFHRPGroupAssignmentRequest{}

// PatchedWritableFHRPGroupAssignmentRequest Adds support for custom fields and tags.
type PatchedWritableFHRPGroupAssignmentRequest struct {
	Group                *int32  `json:"group,omitempty"`
	InterfaceType        *string `json:"interface_type,omitempty"`
	InterfaceId          *int64  `json:"interface_id,omitempty"`
	Priority             *int32  `json:"priority,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchedWritableFHRPGroupAssignmentRequest PatchedWritableFHRPGroupAssignmentRequest

// NewPatchedWritableFHRPGroupAssignmentRequest instantiates a new PatchedWritableFHRPGroupAssignmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedWritableFHRPGroupAssignmentRequest() *PatchedWritableFHRPGroupAssignmentRequest {
	this := PatchedWritableFHRPGroupAssignmentRequest{}
	return &this
}

// NewPatchedWritableFHRPGroupAssignmentRequestWithDefaults instantiates a new PatchedWritableFHRPGroupAssignmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedWritableFHRPGroupAssignmentRequestWithDefaults() *PatchedWritableFHRPGroupAssignmentRequest {
	this := PatchedWritableFHRPGroupAssignmentRequest{}
	return &this
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *PatchedWritableFHRPGroupAssignmentRequest) GetGroup() int32 {
	if o == nil || IsNil(o.Group) {
		var ret int32
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableFHRPGroupAssignmentRequest) GetGroupOk() (*int32, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *PatchedWritableFHRPGroupAssignmentRequest) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given int32 and assigns it to the Group field.
func (o *PatchedWritableFHRPGroupAssignmentRequest) SetGroup(v int32) {
	o.Group = &v
}

// GetInterfaceType returns the InterfaceType field value if set, zero value otherwise.
func (o *PatchedWritableFHRPGroupAssignmentRequest) GetInterfaceType() string {
	if o == nil || IsNil(o.InterfaceType) {
		var ret string
		return ret
	}
	return *o.InterfaceType
}

// GetInterfaceTypeOk returns a tuple with the InterfaceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableFHRPGroupAssignmentRequest) GetInterfaceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceType) {
		return nil, false
	}
	return o.InterfaceType, true
}

// HasInterfaceType returns a boolean if a field has been set.
func (o *PatchedWritableFHRPGroupAssignmentRequest) HasInterfaceType() bool {
	if o != nil && !IsNil(o.InterfaceType) {
		return true
	}

	return false
}

// SetInterfaceType gets a reference to the given string and assigns it to the InterfaceType field.
func (o *PatchedWritableFHRPGroupAssignmentRequest) SetInterfaceType(v string) {
	o.InterfaceType = &v
}

// GetInterfaceId returns the InterfaceId field value if set, zero value otherwise.
func (o *PatchedWritableFHRPGroupAssignmentRequest) GetInterfaceId() int64 {
	if o == nil || IsNil(o.InterfaceId) {
		var ret int64
		return ret
	}
	return *o.InterfaceId
}

// GetInterfaceIdOk returns a tuple with the InterfaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableFHRPGroupAssignmentRequest) GetInterfaceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.InterfaceId) {
		return nil, false
	}
	return o.InterfaceId, true
}

// HasInterfaceId returns a boolean if a field has been set.
func (o *PatchedWritableFHRPGroupAssignmentRequest) HasInterfaceId() bool {
	if o != nil && !IsNil(o.InterfaceId) {
		return true
	}

	return false
}

// SetInterfaceId gets a reference to the given int64 and assigns it to the InterfaceId field.
func (o *PatchedWritableFHRPGroupAssignmentRequest) SetInterfaceId(v int64) {
	o.InterfaceId = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *PatchedWritableFHRPGroupAssignmentRequest) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableFHRPGroupAssignmentRequest) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *PatchedWritableFHRPGroupAssignmentRequest) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *PatchedWritableFHRPGroupAssignmentRequest) SetPriority(v int32) {
	o.Priority = &v
}

func (o PatchedWritableFHRPGroupAssignmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedWritableFHRPGroupAssignmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.InterfaceType) {
		toSerialize["interface_type"] = o.InterfaceType
	}
	if !IsNil(o.InterfaceId) {
		toSerialize["interface_id"] = o.InterfaceId
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchedWritableFHRPGroupAssignmentRequest) UnmarshalJSON(data []byte) (err error) {
	varPatchedWritableFHRPGroupAssignmentRequest := _PatchedWritableFHRPGroupAssignmentRequest{}

	err = json.Unmarshal(data, &varPatchedWritableFHRPGroupAssignmentRequest)

	if err != nil {
		return err
	}

	*o = PatchedWritableFHRPGroupAssignmentRequest(varPatchedWritableFHRPGroupAssignmentRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "group")
		delete(additionalProperties, "interface_type")
		delete(additionalProperties, "interface_id")
		delete(additionalProperties, "priority")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchedWritableFHRPGroupAssignmentRequest struct {
	value *PatchedWritableFHRPGroupAssignmentRequest
	isSet bool
}

func (v NullablePatchedWritableFHRPGroupAssignmentRequest) Get() *PatchedWritableFHRPGroupAssignmentRequest {
	return v.value
}

func (v *NullablePatchedWritableFHRPGroupAssignmentRequest) Set(val *PatchedWritableFHRPGroupAssignmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedWritableFHRPGroupAssignmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedWritableFHRPGroupAssignmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedWritableFHRPGroupAssignmentRequest(val *PatchedWritableFHRPGroupAssignmentRequest) *NullablePatchedWritableFHRPGroupAssignmentRequest {
	return &NullablePatchedWritableFHRPGroupAssignmentRequest{value: val, isSet: true}
}

func (v NullablePatchedWritableFHRPGroupAssignmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedWritableFHRPGroupAssignmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
