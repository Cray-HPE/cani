#!/usr/bin/env sh
# MIT License
#
# (C) Copyright 2023 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
{{ $cmd := .Command }}
{{ $flags := .Flags }}
Describe '{{ $cmd }}'
# Fixtures location ./spec/fixtures
FIXTURES="$SHELLSPEC_HELPERDIR/testdata/fixtures"

# compare value to file content
fixture(){
  test "${fixture:?}" == "$( cat "$FIXTURES/$1" )"
}

{{/* Check each flag individually */}}
It '(with no args)'
  When call bin/{{ $cmd }}
  The status should equal {{ $cmd }}
  The stdout should satisfy fixture '{{ replaceString $cmd " " "/" }}/help'
End
{{- range $flagName, $flagInfo := .Flags }}
{{/* Check each flag individually */}}
It '{{ $cmd }} --{{ $flagName }} arg'
  When call bin/{{ $cmd }} --{{ $flagName }} arg
  The status should equal 0
  The stdout should equal ""
  The stderr should equal ""
End
{{- end }}

{{/* Check flags cumulatively */}}
{{- range $i, $outerFlag := $flags }}
It '{{- range $j, $innerFlag := $flags }}{{- if le $j $i }} --{{ (index $flags $j).Name }} arg{{- end }}{{- end }}'
  When call bin/{{ $cmd }}{{- range $j, $innerFlag := $flags }}{{- if le $j $i }} --{{ (index $flags $j).Name }} arg{{- end }}{{- end }}
  The status should equal 0
  The stdout should equal ""
  The stderr should equal ""
End
{{ end }}

End
